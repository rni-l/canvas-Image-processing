{"version":3,"sources":["../js/index/node_modules/.6.0.2@browser-pack/_prelude.js","../js/index/src/js/index/draw.js","../js/index/src/js/index/filter.js","../js/index/src/js/index/lineData.js","../js/index/src/js/index/main.js","../js/index/src/js/index/opts.js","../js/index/src/js/index/photograph.js","../js/index/src/js/index/selectImgSize.js","../js/index/src/plugins/colorPicker.js","../js/index/src/plugins/exif.js","../js/index/src/plugins/fastclick.js","../js/index/src/plugins/imagefilters.js","../js/index/src/utils/filterData.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import opts from './opts'\r\nimport lineData from './lineData'\r\nimport setFilter from './filter'\r\n\r\n// 画布功能\r\nconst arrX = [], // 坐标x\r\n  arrY = [], // 坐标y\r\n  arrN = [], // 笔触点击，移动，放开总次数\r\n  arrColor = [], // 线条颜色\r\n  arrWidth = [], // 线条粗细\r\n  arrNumber = [], // 笔触点击次数\r\n  c_left = opts.oCan.offsetLeft, // canvas的Left,top\r\n  c_top = opts.oCan.offsetTop,\r\n  oCan = opts.oCan,\r\n  ctx = opts.ctx\r\nlet lastX = -1,\r\n  lastY = -1\r\n\r\nfunction addData(data) {\r\n  arrX.push(data.x)\r\n  arrY.push(data.y)\r\n  arrN.push(data.n)\r\n  arrColor.push(data.color)\r\n  arrWidth.push(data.width)\r\n}\r\n\r\n// 绘制\r\nfunction draw(len) {\r\n  ctx.beginPath()\r\n  ctx.lineCap = 'round'\r\n  ctx.lineJoin = 'round'\r\n\r\n  for (let i = 1; i < len; i++) {\r\n    // 线条颜色，粗细\r\n    ctx.lineWidth = arrWidth[i]\r\n    ctx.strokeStyle = arrColor[i]\r\n    lastX = arrX[i]\r\n    lastY = arrY[i]\r\n    if (arrN[i] === 2) {\r\n      // 开头，保存当前的桟\r\n      ctx.beginPath()\r\n      ctx.save()\r\n      ctx.moveTo(lastX, lastY)\r\n    } else {\r\n      ctx.lineTo(lastX, lastY)\r\n    }\r\n    // 绘制线条，释放桟，关闭路线\r\n    ctx.stroke()\r\n    ctx.restore()\r\n  }\r\n  ctx.closePath()\r\n}\r\n\r\n// 重新绘制笔触\r\nfunction cleanDraw() {\r\n  draw(arrN.length)\r\n}\r\n\r\n// 移动\r\nfunction move(e) {\r\n  e.preventDefault()\r\n  const t = e.touches[0]\r\n  // 将计算后的xy位置，添加到数组里\r\n  arrX.push(Math.floor(t.pageX - c_left))\r\n  arrY.push(Math.floor(t.pageY - c_top))\r\n  arrN.push(1)\r\n  arrWidth.push(lineData.w)\r\n  arrColor.push(lineData.color)\r\n  // 绘制\r\n  draw(arrX.length)\r\n}\r\n// 点击\r\nfunction down(e) {\r\n  ctx.clearRect(0, 0, opts.canvasW, opts.cavasH)\r\n  if (!opts.isDraw) {\r\n    return false\r\n  }\r\n  // 重新上传图片，笔触清零\r\n  if (opts.isNewPic) {\r\n    opts.isNewPic = false\r\n    // 笔触记录清零\r\n    arrX.length = 0\r\n    arrY.length = 0\r\n    arrN.length = 0\r\n    arrColor.length = 0\r\n    arrWidth.length = 0\r\n  }\r\n  const t = e.touches[0]\r\n  // 添加到数组，存储\r\n  addData({\r\n    x: t.pageX - c_left,\r\n    y: t.pageY - c_top,\r\n    n: 2,\r\n    color: lineData.color,\r\n    width: lineData.w\r\n  })\r\n  // 记录操作\r\n  arrNumber.push(arrN.length)\r\n  oCan.addEventListener('touchmove', move, false)\r\n}\r\n// 放开\r\nfunction up(e) {\r\n  if (!opts.isDraw) {\r\n    return false\r\n  }\r\n  const t = e.changedTouches[0]\r\n  // 添加到数组，存储\r\n  addData({\r\n    x: t.pageX - c_left,\r\n    y: t.pageY - c_top,\r\n    n: 1,\r\n    color: lineData.color,\r\n    width: lineData.w\r\n  })\r\n  // 取消事件\r\n  oCan.removeEventListener('touchmove', move, false)\r\n}\r\n\r\n// 撤销\r\nfunction revoke() {\r\n  // 如果路线少于0，不会绘制\r\n  if (!arrNumber[arrNumber.length - 1]) {\r\n    return false\r\n  }\r\n  // 获取最后一次笔触的次数\r\n  const len = arrNumber[arrNumber.length - 1]\r\n  arrNumber.pop()\r\n  // 清除对应数量的操作\r\n  arrX.length = len\r\n  arrY.length = len\r\n  arrN.length = len\r\n  arrColor.length = len\r\n  arrWidth.length = len\r\n  ctx.clearRect(0, 0, opts.canvasW, opts.canvasH)\r\n  const data = opts.data\r\n  /*\r\n    重绘流程：\r\n    重新绘制图片 => 渲染滤镜 => 渲染笔触\r\n  */\r\n  ctx.drawImage(data.img, data.imgPos.x, data.imgPos.y, data.imgPos.w, data.imgPos.h)\r\n  setFilter()\r\n  draw(len)\r\n}\r\n\r\n// 添加撤销事件撤销事件\r\nopts.oRevoke.addEventListener('touchstart', revoke)\r\n\r\noCan.addEventListener('touchstart', down, false)\r\noCan.addEventListener('touchend', up, false)\r\n\r\n// 清除笔画功能\r\nexport default cleanDraw\r\n","import opts from './opts'\r\nimport updateDrawStrokes from './draw'\r\nimport ImageFilters from './../../plugins/imagefilters'\r\nimport filterChooseData from './../../utils/filterData'\r\n\r\n// 缓存滤镜信息数据\r\nconst filterData = {\r\n  filter: []\r\n}\r\nconst oFilterBox = document.getElementById('filterBox'), // 滤镜盒子\r\n  oFilterSelect = document.getElementById('filterSelect'), // 选择滤镜select\r\n  oContent = document.querySelector('#filterBox .content')\r\nlet typeName = '', // 当前滤镜效果的名字\r\n  dataList = [] // 当前滤镜效果，子选项值\r\n\r\n/*\r\n  滤镜流程：\r\n  1. 选择好滤镜效果和滤镜的值\r\n  2. 获取渲染滤镜效果的数据\r\n  3. 再渲染到主屏\r\n  4. 绘制笔触效果\r\n*/\r\n\r\n/*\r\n *设置滤镜\r\n *参数\r\n *type: 滤镜类型名字\r\n *imageData: 图片数据\r\n*/\r\nfunction setFilter(type = typeName, imgData = opts.data.imageData) {\r\n  if (!type) {\r\n    return false\r\n  }\r\n  const ctx = opts.ctx\r\n  /*\r\n   *生成滤镜效果\r\n   *参数\r\n   *type: 选择的滤镜效果名字\r\n   *[0]: 图片数据\r\n   *[1]: 滤镜效果的各个数值\r\n  */\r\n  let filtered = ImageFilters[type](imgData, ...filterData.filter),\r\n    pos = opts.data.imgPos\r\n  ctx.clearRect(pos.x, pos.y, pos.w, pos.h)\r\n  ctx.putImageData(filtered, pos.x, pos.y)\r\n  filtered = null\r\n  pos = null\r\n}\r\n\r\n// 更新滤镜选项\r\nfunction updateFilter() {\r\n  // 清空\r\n  filterData.filter.length = 0\r\n  // 将当前input的value值存入filter里面\r\n  dataList.forEach((v) => {\r\n    filterData.filter.push(v.value)\r\n  })\r\n  // 设置\r\n  setFilter(typeName)\r\n  // 绘制笔触\r\n  updateDrawStrokes()\r\n}\r\n\r\n// 将数组格式化成html\r\nfunction format(data) {\r\n  let str = ''\r\n  typeName = data.name\r\n  data.chooseValue.forEach((v, i) => {\r\n    const _range = data.range\r\n    str += `<div class='list'>\r\n      <span>${v}</span><input type='range' max='${_range[i].max}' min='${_range[i].min}' value='${_range[i].first}' id='${v}' /><span>${_range[i].first}</span>\r\n    </div>`\r\n  })\r\n  return str\r\n}\r\n\r\n// box change事件\r\noFilterBox.addEventListener('change', (e) => {\r\n  const tar = e.target\r\n  // 事件委托，获取到当前对象\r\n  if (tar.getAttribute('type') === 'range') {\r\n    // 当range值更改后，渲染滤镜\r\n    updateFilter()\r\n  }\r\n}, false)\r\n\r\n// box input事件\r\noFilterBox.addEventListener('input', (e) => {\r\n  const tar = e.target\r\n  // 事件委托，获取到当前对象\r\n  if (tar.getAttribute('type') === 'range') {\r\n    // 拖动滚动条时，显示当前的value值\r\n    tar.nextSibling.innerHTML = tar.value\r\n  }\r\n})\r\n\r\noFilterBox.addEventListener('touchstart', () => {\r\n  opts.isStopPrevent = false\r\n}, false)\r\n\r\n// 选择滤镜效果\r\noFilterSelect.addEventListener('change', function() {\r\n  opts.isStopPrevent = true\r\n  // 获取选择的滤镜效果数据\r\n  const arr = filterChooseData.filterValue.filter((v) => {\r\n    return v.name === this.value\r\n  })\r\n  if (!arr) {\r\n    return false\r\n  }\r\n  // 格式化内容，生成range组件\r\n  oContent.innerHTML = format(arr[0])\r\n  // 获取input对象数组\r\n  const aInput = [...document.querySelectorAll('#filterBox .content input')]\r\n  // 缓存input对象\r\n  dataList = aInput.filter((v) => {\r\n    return v.nodeName === 'INPUT'\r\n  })\r\n  updateFilter()\r\n}, false)\r\n\r\n// 渲染当前选择好的滤镜效果\r\nexport default setFilter\r\n","import opts from './opts'\r\nimport ColorPicker from './../../plugins/colorPicker'\r\n\r\nconst output = { color: '#000000', w: 5 }\r\n// 画布的线的，数据（）\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const oP = document.querySelector('.rangeWrap p')\r\n  const oColorBtn = document.querySelector('.colorBtn'),\r\n    oColorBox = document.querySelector('.colorPickerbox')\r\n  let colorOnoff = true\r\n\r\n  // 模拟range\r\n  const oRange = document.querySelector('.rangeBtn'),\r\n    oRangePar = document.querySelector('.rangeLine'),\r\n    r_opts = {\r\n      h: oRangePar.offsetHeight,\r\n      t: oRangePar.offsetTop,\r\n      rH: oRange.offsetHeight,\r\n      max: 10,\r\n      min: 1,\r\n      size: 1,\r\n      num: 0\r\n    }\r\n\r\n  function rangeMove(e) {\r\n    const t = e.touches[0]\r\n    let my = t.clientY - r_opts.t\r\n    if (my <= 0) {\r\n      my = 0\r\n    } else if (my >= r_opts.h) {\r\n      my = r_opts.h\r\n    }\r\n\r\n    opts.transform(oRange, ('translateY(' + my + 'px)'))\r\n    r_opts.my = my\r\n    // 判断当前位置，属于几\r\n    const value = Math.floor(my / r_opts.num)\r\n    output.w = value\r\n    oP.innerHTML = '宽度：' + value\r\n  }\r\n\r\n  // 颜色选择器\r\n  const colorPicker = new ColorPicker({\r\n    oBox: oColorBox,\r\n    oBtnWrap: document.querySelector('.btnWrap'),\r\n    oCan: document.querySelector('#colorPicker'),\r\n    width: 200,\r\n    height: 200,\r\n    callback: (color) => {\r\n      output.color = color\r\n      oColorBtn.style.background = color\r\n    }\r\n  })\r\n\r\n  colorPicker.init()\r\n\r\n  oColorBtn.addEventListener('touchstart', () => {\r\n    opts.transform(oColorBox, 'translateX(' + (colorOnoff ? 0 : -1000) + 'px)')\r\n    colorOnoff = !colorOnoff\r\n  }, false)\r\n\r\n  oRange.addEventListener('touchstart', (e) => {\r\n    e.stopPropagation()\r\n    const t = e.touches[0]\r\n    r_opts.fx = t.clientX\r\n    r_opts.fy = t.clientY\r\n\r\n    r_opts.h = oRangePar.offsetHeight\r\n    r_opts.t = oRangePar.offsetTop\r\n    r_opts.rH = oRange.offsetHeight\r\n    // 修正高度\r\n    r_opts.h -= r_opts.rH\r\n    // 份数\r\n    r_opts.num = r_opts.h / r_opts.max\r\n    // 添加移动事件\r\n    oRange.addEventListener('touchmove', rangeMove, false)\r\n  }, false)\r\n\r\n  oRange.addEventListener('touchend', () => {\r\n    // 移除移动事件\r\n    oRange.removeEventListener('touchmove', rangeMove, false)\r\n  }, false)\r\n}, false)\r\n\r\nexport default output\r\n","// 入口文件\r\nimport Fastclick from './../../plugins/fastclick'\r\nimport _opts from './opts'\r\nimport './photograph'\r\nimport './draw'\r\nimport './lineData'\r\nimport './filter'\r\nimport './selectImgSize'\r\n// 添加fastclick\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  Fastclick.attach(document.body)\r\n}, false)\r\n\r\ndocument.querySelector('.main').addEventListener('touchmove', (e) => {\r\n  if (_opts.isStopPrevent) {\r\n    e.preventDefault()\r\n  }\r\n}, false)\r\n\r\nconst oFilterBox = document.getElementById('filterBox')\r\n\r\n// 滤镜框显示隐藏\r\ndocument.getElementById('filterBtn').addEventListener('touchstart', () => {\r\n  oFilterBox.style.display = 'block'\r\n}, false)\r\n\r\ndocument.querySelector('#filterBox .close').addEventListener('touchstart', () => {\r\n  oFilterBox.style.display = 'none'\r\n}, false)\r\n\r\nconst oTop = document.querySelector('.main_top')\r\n\r\n_opts.canvasW = oTop.offsetWidth\r\n_opts.canvasH = oTop.offsetHeight\r\n\r\n// 初始化，定义画布宽高\r\nconst oCan = _opts.oCan\r\noCan.width = _opts.canvasW\r\noCan.height = _opts.canvasH\r\n","// 将对象存储在内存中\r\nconst oCan = document.getElementById('canvas'), // 获取画布\r\n  ctx = oCan.getContext('2d'),\r\n  oShowImg = document.getElementById('lastImg'), // 最终生成的图片\r\n  oMsg = document.querySelector('.msg'),\r\n  oZhezhao = document.querySelector('.zhezhao'),\r\n  oRevoke = document.getElementById('revoke') // 撤销按钮  \r\n\r\n// 公共方法\r\nfunction showLoading(type) {\r\n  oZhezhao.style.display = type\r\n  oMsg.style.display = type\r\n}\r\n\r\nexport default {\r\n  // 对象\r\n  oCan: oCan,\r\n  ctx: ctx,\r\n  oShowImg: oShowImg,\r\n  oMsg: oMsg,\r\n  oZhezhao: oZhezhao,\r\n  oRevoke: oRevoke,\r\n  // 方法\r\n  showLoading: showLoading,\r\n  isDraw: false, // 能否涂鸦\r\n  isNewPic: true, // 是否新的图片\r\n  isStopPrevent: true, // 是否阻止全局默认事件\r\n  data: {},\r\n  imgData: {},\r\n  // 兼容写法\r\n  transform: (obj, data) => {\r\n    obj.style.WebkitTransform = data\r\n    obj.style.transform = data\r\n  }\r\n}\r\n","import EXIF from './../../plugins/exif'\r\nimport opts from './opts'\r\n\r\nconst oCan = opts.oCan,\r\n  ctx = opts.ctx,\r\n  oAsideBtn = document.querySelector('.asideBtn'),\r\n  oAside = document.querySelector('#aside'),\r\n  oFile = document.getElementById('file'), // 上传图片按钮\r\n  oCreateBtn = document.getElementById('create'), // 生成图片按钮\r\n  imgData = {}\r\n\r\nlet isCreatePic = false // 是否生成了图片\r\n\r\n/*\r\n *图片上传处理过程\r\n *图片上传成功后 => 获取元数据 => 转化为base64 => 修正图片的宽高，显示的方向和图片的内存大小\r\n*/\r\n\r\n// 生成图片\r\nfunction createImg(e) {\r\n  e.preventDefault()\r\n  if (!isCreatePic) {\r\n    return false\r\n  }\r\n  // 删除上传图片按钮\r\n  oFile.parentNode.removeChild(oFile)\r\n  this.parentNode.removeChild(this)\r\n  oCan.style.display = 'none'\r\n  this.style.display = 'block'\r\n  // 生成图片\r\n  opts.oShowImg.src = oCan.toDataURL('image/png')\r\n  opts.oShowImg.style.display = 'block'\r\n  opts.oShowImg.style.position = 'static'\r\n  $.post('/api/savePic', {id: document.querySelector('#user').getAttribute('userId'), url: opts.oShowImg.src}, (data) => {\r\n    console.log(data)\r\n  })\r\n  document.querySelector('.successPage').style.display = 'flex'\r\n  document.querySelector('.main_bottom').innerHTML = '<p class=\"success_txt\">生成图片成功！长按可保存图片</p>'\r\n}\r\n\r\n// 图片load回调方法\r\nfunction cacheImg(url, callback) {\r\n  console.log('load')\r\n  if (!url) {\r\n    callback.call()\r\n    return false\r\n  }\r\n  const img = new Image()\r\n  // img.crossOrigin = \"Anonymous\"\r\n  img.onload = () => {\r\n    // 图片加载完，执行回调\r\n    callback.call(img)\r\n  }\r\n  img.src = url\r\n}\r\n\r\n// 显示功能\r\nfunction showFun() {\r\n  opts.showLoading('none')\r\n  // 选择size，笔触颜色显示\r\n  oAsideBtn.style.display = 'block'\r\n  oCreateBtn.style.display = 'block'\r\n  document.getElementById('filterBtn').style.display = 'block'\r\n  // 撤销按钮小时\r\n  opts.oRevoke.style.display = 'block'\r\n  isCreatePic = true\r\n  // 是否可以画笔触\r\n  opts.isDraw = true\r\n  // 是新的图片\r\n  opts.isNewPic = true\r\n}\r\n\r\n// 使用离屏进行计算\r\n// function offScreen() {\r\n// }\r\n\r\n// 计算图片的宽高\r\nfunction computeWidthAndHeight(data) {\r\n  let drawWidth = data.drawWidth,\r\n    drawHeight = data.drawHeight,\r\n    degree = 0,\r\n    maxSide = Math.max(drawWidth, drawHeight)\r\n  const params = data.params,\r\n    size = 2048\r\n\r\n  // 如果当期size大于2M，按比例修正到2M以下\r\n  if (maxSide > size) {\r\n    let minSide = Math.min(drawWidth, drawHeight)\r\n    minSide = minSide / maxSide * size\r\n    maxSide = size\r\n    if (drawWidth > drawHeight) {\r\n      drawWidth = maxSide\r\n      drawHeight = minSide\r\n    } else {\r\n      drawWidth = minSide\r\n      drawHeight = maxSide\r\n    }\r\n  }\r\n  // 使用离屏canvas修正图片的方向\r\n  const canvas = document.createElement('canvas')\r\n  const width = drawWidth,\r\n    height = drawHeight\r\n  canvas.width = width\r\n  canvas.height = height\r\n\r\n  const context = canvas.getContext('2d')\r\n  // 判断图片方向，重置canvas大小，确定旋转角度，iphone默认的是home键在右方的横屏拍摄方式\r\n  switch (params.data.Orientation) {\r\n  // iphone横屏拍摄，此时home键在左侧\r\n  case 3:\r\n    degree = 180\r\n    drawWidth = -width\r\n    drawHeight = -height\r\n    break\r\n    // iphone竖屏拍摄，此时home键在下方(正常拿手机的方向)\r\n  case 6:\r\n    canvas.width = height\r\n    canvas.height = width\r\n    degree = 90\r\n    drawWidth = width\r\n    drawHeight = -height\r\n    break\r\n    // iphone竖屏拍摄，此时home键在上方\r\n  case 8:\r\n    canvas.width = height\r\n    canvas.height = width\r\n    degree = 270\r\n    drawWidth = -width\r\n    drawHeight = height\r\n    break\r\n  }\r\n  /*\r\n   *返回参数\r\n   *degress: 渲染的方向\r\n   *drawWidth: 修正后的宽度\r\n   *.......\r\n  */\r\n  return {\r\n    degree: degree,\r\n    drawWidth: drawWidth,\r\n    drawHeight: drawHeight,\r\n    context: context,\r\n    canvas: canvas\r\n  }\r\n}\r\n\r\n// 获取处理好的图片数据\r\nfunction getImgData(params) {\r\n  cacheImg(params.img, function() {\r\n    // 以下改变一下图片大小\r\n    // 获取宽高中，最大的值\r\n    let output = computeWidthAndHeight({\r\n      drawWidth: params.data.PixelXDimension || this.naturalWidth,\r\n      drawHeight: params.data.PixelYDimension || this.naturalHeight,\r\n      params: params\r\n    })\r\n    // 使用canvas旋转校正\r\n    output.context.rotate(output.degree * Math.PI / 180)\r\n    // 渲染新的图片\r\n    output.context.drawImage(this, 0, 0, output.drawWidth, output.drawHeight)\r\n    // 生成校正后图片\r\n    params.next(output.canvas.toDataURL('image/png'))\r\n    output = null\r\n  })\r\n}\r\n\r\n// 处理修正后的图片，渲染到屏幕上\r\nfunction uploadFileCallBack() {\r\n  // 获取图片的宽高\r\n  let w = this.width,\r\n    h = this.height\r\n  // 缓存图片初始宽高\r\n  imgData.w = w\r\n  imgData.h = h\r\n  opts.imgData.w = w\r\n  opts.imgData.h = h\r\n  const cW = opts.canvasW,\r\n    cH = opts.canvasH\r\n  if (cW / cH > w / h) {\r\n    // 宽大于高，高100%\r\n    w = w * cH / h\r\n    h = cH\r\n  } else {\r\n    // 高大于宽，宽100%\r\n    h = h * cW / w\r\n    w = cW\r\n  }\r\n  ctx.clearRect(0, 0, cW, cH)\r\n  // 生成图片，居中显示\r\n  ctx.drawImage(this, (cW - w) / 2, (cH - h) / 2, w, h)\r\n  // 缓存当前图片的数据到内存里\r\n  opts.data.imageData = ctx.getImageData((cW - w) / 2, (cH - h) / 2, w, h)\r\n  opts.data.img = this\r\n  opts.data.imgPos = {\r\n    x: (cW - w) / 2,\r\n    y: (cH - h) / 2,\r\n    w: w,\r\n    h: h\r\n  }\r\n  showFun()\r\n}\r\n\r\n// 图片上传回调事件\r\nfunction uploadFile() {\r\n  const file = this.files[0]\r\n  let exifData = null\r\n  // 判断图片是否过大\r\n  if (file.size / 1024 > 5000) {\r\n    // 大于2M\r\n    alert('图片过大，请选择相对较小的图片')\r\n    return false\r\n  }\r\n  // 图片处理中，提示层出现\r\n  opts.showLoading('block')\r\n  const reader = new FileReader()\r\n  new Promise((resolve) => {\r\n  // 获取图片的元数据\r\n    EXIF.getData(file, function() {\r\n      exifData = EXIF.getAllTags(this)\r\n      resolve()\r\n    })\r\n  }).then(() => {\r\n    reader.onload = function() {\r\n      // 图片信息获取完毕\r\n      // 修正图片方向\r\n      getImgData({\r\n        img: this.result,\r\n        data: exifData,\r\n        next: (img) => {\r\n          cacheImg(img, uploadFileCallBack)\r\n        }\r\n      })\r\n    }\r\n    reader.readAsDataURL(file)\r\n  })\r\n}\r\n\r\n// 图片上传后，change事件\r\noFile.addEventListener('change', uploadFile, false)\r\n\r\n// 生成图片\r\noCreateBtn.addEventListener('touchstart', createImg, false)\r\n\r\n// 侧边栏显示\r\noAsideBtn.addEventListener('touchstart', () => {\r\n  if (!isCreatePic) {\r\n    alert('请先选择图片')\r\n    return false\r\n  }\r\n  opts.isDraw = false\r\n  oAside.style.display = 'block'\r\n})\r\n// 侧边栏隐藏\r\ndocument.querySelector('.aside_hideBtn').addEventListener('touchstart', () => {\r\n  opts.isDraw = true\r\n  oAside.style.display = 'none'\r\n  opts.transform(document.querySelector('.colorPickerbox'), 'translateX(-1000px)')\r\n})\r\n","import updateDrawStrokes from './draw'\r\nimport setFilter from './filter'\r\nimport opts from './opts'\r\n\r\nconst ctx = opts.ctx\r\n\r\n// 改变图片展示方式\r\nfunction selectPicSize(value) {\r\n  let set_x,\r\n    set_y,\r\n    set_w,\r\n    set_h,\r\n    w = opts.imgData.w,\r\n    h = opts.imgData.h\r\n  const cw = opts.canvasW,\r\n    ch = opts.canvasH\r\n\r\n  function check_type(type) {\r\n    if (type) {\r\n      if (cw / ch > w / h) {\r\n        // 宽大于高，高100%\r\n        w = w * ch / h\r\n        h = ch\r\n      } else {\r\n        h = h * cw / w\r\n        w = cw\r\n      }\r\n    } else {\r\n      if (cw / ch <= w / h) {\r\n        // 宽大于高，高100%\r\n        w = w * ch / h\r\n        h = ch\r\n      } else {\r\n        h = h * cw / w\r\n        w = cw\r\n      }\r\n    }\r\n  }\r\n  // 改变图片展示方式\r\n  switch (value) {\r\n  case '1':\r\n    // 居中\r\n    check_type(true)\r\n    set_x = (cw - w) / 2\r\n    set_y = (ch - h) / 2\r\n    set_w = w\r\n    set_h = h\r\n    break\r\n  case '2':\r\n    // 填充\r\n    check_type(false)\r\n    set_x = (cw - w) / 2\r\n    set_y = (ch - h) / 2\r\n    set_w = w\r\n    set_h = h\r\n    break\r\n  case '3':\r\n    // 适应\r\n    check_type(true)\r\n    set_x = 0\r\n    set_y = 0\r\n    set_w = w\r\n    set_h = h\r\n    break\r\n  case '4':\r\n    // 拉伸\r\n    set_x = 0\r\n    set_y = 0\r\n    set_w = cw\r\n    set_h = ch\r\n    break\r\n  default:\r\n    // 居中\r\n    check_type(true)\r\n    set_x = (cw - w) / 2\r\n    set_y = (ch - h) / 2\r\n    set_w = w\r\n    set_h = h\r\n    break\r\n  }\r\n  return {\r\n    set_x: set_x,\r\n    set_y: set_y,\r\n    set_w: set_w,\r\n    set_h: set_h\r\n  }\r\n}\r\n// 选择图片的显示方式\r\ndocument.getElementById('selectPicSize').addEventListener('change', function() {\r\n  // 获取上传的图片\r\n  let img = opts.data.img\r\n  // 获取修正后的宽高,xy\r\n  const output = selectPicSize(this.value)\r\n  const set_x = output.set_x,\r\n    set_y = output.set_y,\r\n    set_w = output.set_w,\r\n    set_h = output.set_h\r\n  // 重绘\r\n  ctx.clearRect(0, 0, opts.canvasW, opts.canvasH)\r\n  ctx.drawImage(img, set_x, set_y, set_w, set_h)\r\n  opts.data.imageData = ctx.getImageData(set_x, set_y, set_w, set_h)\r\n  opts.data.imgPos = {\r\n    x: set_x,\r\n    y: set_y,\r\n    w: set_w,\r\n    h: set_h\r\n  }\r\n  img = null\r\n  setFilter()\r\n  updateDrawStrokes()\r\n}, false)\r\n","function ColorPicker(params) {\r\n  this.oBox = params.oBox//最外层盒子\r\n  this.oBtnWrap = params.oBtnWrap//按钮外层盒子\r\n  this.oCan = params.oCan//画布\r\n  this.ctx = params.oCan.getContext('2d')\r\n\r\n  this.w = params.width//画布的宽高\r\n  this.h = params.width\r\n  this.lineW = 20 //外层颜色的厚度\r\n  this.r = this.w / 2 //外圆半径\r\n  this.r2 = this.r - this.lineW //内圆半径\r\n    //内层颜色宽高,坐标\r\n  this.iW = (this.r2 - 5) / Math.cos(2 * Math.PI / 360 * 45)\r\n  this.iX = (this.w - this.iW) / 2\r\n    //canvas的Left top值\r\n  this.where = '' //点击时的位置\r\n    //属性\r\n  this.opts = {\r\n    insideX: 0,\r\n    insideY: 0\r\n  }\r\n  this.callback = params.callback;\r\n  this.bindMove = null;\r\n}\r\n\r\nColorPicker.prototype = {\r\n  init: function() {\r\n    //初始化\r\n    this.oCan.width = this.w;\r\n    this.oCan.height = this.h;\r\n    //生成节点（内外层选择点）\r\n    this.oBtnWrap.innerHTML = '<div class=\"insideBtn\"></div><div class=\"outsideBtn\"></div>';\r\n    //两个颜色选择点\r\n    this.oInsideBtn = document.querySelector(\".insideBtn\");\r\n    this.oOutsideBtn = document.querySelector(\".outsideBtn\");\r\n    //按钮宽度\r\n    this.btnW = this.oInsideBtn.offsetWidth;\r\n    \r\n    var x = this.w / 2,\r\n      y = this.h / 2,\r\n      _this = this,\r\n      r2 = this.r2\r\n    //按钮位置初始化\r\n    this.transform(this.oInsideBtn, 'translate(' + (this.iW + this.iX - this.btnW) + 'px ,' + this.iX + 'px)');\r\n    this.transform(this.oOutsideBtn, 'translate(' + x + 'px ,' + 0 + 'px)');\r\n    this.opts.insideX = this.iW + this.iX - this.btnW;\r\n    this.opts.insideY = this.iX;\r\n    //生成外层颜色\r\n    this.createColorBg(x,y);\r\n\r\n    //生成内颜色\r\n    this.createInsideColor('red');\r\n    var move = _this.move.bind(this);\r\n    this.bindMove = this.move.bind(this);\r\n    //给予事件\r\n    //pc端\r\n    this.oBox.addEventListener('mousedown', this.addMove.bind(this), false);\r\n    this.oBox.addEventListener('mouseup', this.removeMove.bind(this), false);\r\n\r\n    //移动端\r\n    this.oCan.addEventListener('touchstart', this.addMove.bind(this), false);\r\n    this.oCan.addEventListener('touchend', this.removeMove.bind(this), false);\r\n  },\r\n  addMove:function(e){\r\n    //获取canvas的left ,top 位置\r\n    if (!this.oCan_left) {\r\n      var canPos = this.getElemPos(this.oCan)\r\n      this.oCan_left = canPos.x\r\n      this.oCan_top = canPos.y\r\n    }\r\n    //颜色初始化\r\n    this.move(e);\r\n    document.addEventListener('mousemove', this.bindMove, false);\r\n    document.addEventListener('touchmove', this.bindMove, false);\r\n  },\r\n  removeMove:function(){\r\n    console.log('out')\r\n    document.removeEventListener('mousemove', this.bindMove, false);\r\n    document.removeEventListener('touchmove', this.bindMove, false);\r\n  },\r\n  createColorBg:function(x,y){\r\n    //生成圆环颜色\r\n    var ctx = this.ctx;\r\n    for (var i = 0; i < 360; i += .1) {\r\n      //获取度数\r\n      var rad = i * (2 * Math.PI) / 360,\r\n        c_x = Math.cos(rad),\r\n        c_y = Math.sin(rad),\r\n        lineW = this.lineW\r\n      ctx.strokeStyle = \"hsl(\" + i + \", 100%, 50%)\";\r\n      ctx.beginPath();\r\n      ctx.moveTo(x + (x - lineW) * c_x, y + (y - lineW) * c_y);\r\n      //求出另外两点坐标\r\n      ctx.lineTo(x + x * c_x, y + y * c_y);\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n  },\r\n  createInsideColor: function(color) {\r\n    //生成内颜色\r\n    var ctx = this.ctx,\r\n      w = this.w,\r\n      h = this.h,\r\n      iW = this.iW,\r\n      iX = this.iX //起点坐标\r\n      //清除指定区域\r\n    ctx.clearRect(iX, iX, iW, iW)\r\n    ctx.fillStyle = color\r\n    ctx.fillRect(iX, iX, iW, iW)\r\n      //白色\r\n    var g = ctx.createLinearGradient(iX, (iX + iW) / 2, iX + iW, (iX + iW) / 2)\r\n    g.addColorStop(0, \"#FFFFFF\")\r\n    g.addColorStop(1, \"rgba(255,255,255,0)\");\r\n    ctx.fillStyle = g;\r\n    ctx.fillRect(iX, iX, iW, iW);\r\n\r\n    //黑色\r\n    var g = ctx.createLinearGradient(iX, iX + iW, iX, iX)\r\n    g.addColorStop(0, \"#000000\")\r\n    g.addColorStop(1, \"rgba(0,0,0,0)\");\r\n    ctx.fillStyle = g;\r\n    ctx.fillRect(iX, iX, iW, iW);\r\n  },\r\n  move: function(e) {\r\n    //移动事件\r\n    var t = e.touches ? e.touches[0] : e,\r\n      x = t.pageX - this.oCan_left,\r\n      y = t.pageY - this.oCan_top\r\n    var pos = this.btnPosition(x, y);\r\n    if (!pos) {\r\n      return false; }\r\n\r\n    var where = this.where,\r\n      color = '';\r\n    this.transform(where === 'outside' ? this.oOutsideBtn : this.oInsideBtn, 'translate(' + pos.x + 'px ,' + pos.y + 'px)');\r\n    color = this.getColor(pos.x, pos.y);\r\n    if (where === 'outside') {\r\n      //如果是外层，改变内层颜色\r\n      this.createInsideColor(color);\r\n      color = this.getColor(this.opts.insideX, this.opts.insideY);\r\n    }\r\n    this.callback && this.callback(color);\r\n  },\r\n  btnPosition: function(x, y) {\r\n    //判断外按钮位置\r\n    var w = this.w,\r\n      h = this.h,\r\n      iW = this.iW,\r\n      iX = this.iX;\r\n\r\n    //获取圆心到点的距离\r\n    var d = Math.sqrt(Math.pow((x - w / 2), 2) + Math.pow((y - h / 2), 2))\r\n      //判断在内层颜色内\r\n    if ((x > iX && x < iX + iW) && (y > iX && y < iX + iW)) {\r\n      this.where = 'inside'\r\n    } else if (d >= this.r2 && d <= this.r) {\r\n      //判断在外层颜色内\r\n      this.where = 'outside'\r\n    } else {\r\n      console.log('no')\r\n      return false;\r\n    }\r\n    var where = this.where,\r\n      btnW = this.btnW,\r\n      btnW2 = btnW / 2\r\n      //计算是否有超出\r\n    if (where === 'outside') {\r\n      if (x < btnW2) {\r\n        x = 0\r\n      } else if (x > w - btnW2) {\r\n        x = w - btnW\r\n      }\r\n      if (y < btnW2) {\r\n        y = 0\r\n      } else if (y > h - btnW2) {\r\n        y = h - btnW\r\n      }\r\n    } else {\r\n      var x1 = iX - btnW2,\r\n        y1 = iW + iX - btnW2,\r\n        y2 = iW + iX - btnW\r\n      if (x < x1) {\r\n        x = iX\r\n      } else if (x > y1) {\r\n        x = y2;\r\n      }\r\n      if (y < x1) {\r\n        y = iX\r\n      } else if (y > y1) {\r\n        y = y2\r\n      }\r\n\r\n      this.opts.insideX = x;\r\n      this.opts.insideY = y;\r\n    }\r\n    return {\r\n      x: x,\r\n      y: y\r\n    }\r\n  },\r\n  transform: function(obj, data) {\r\n    obj.style.WebkitTransform = data;\r\n    obj.style.transform = data;\r\n  },\r\n  getColor: function(x, y) {\r\n    var pixel = this.ctx.getImageData(x, y, 1, 1),\r\n      data = pixel.data,\r\n      rgb = 'rgb(' + data[0] + ',' + data[1] +\r\n      ',' + data[2] + ')';\r\n    return rgb\r\n  },\r\n  getElemPos: function(obj) {\r\n    //获取目标，到最外层的offsetLeft和offsetTop\r\n    var pos = {\r\n      \"top\": 0,\r\n      \"left\": 0\r\n    };\r\n    if (obj.offsetParent) {\r\n      while (obj.offsetParent) {\r\n        pos.top += obj.offsetTop;\r\n        pos.left += obj.offsetLeft;\r\n        obj = obj.offsetParent;\r\n      }\r\n    } else if (obj.x) {\r\n      pos.left += obj.x;\r\n    } else if (obj.x) {\r\n      pos.top += obj.y;\r\n    }\r\n    return {\r\n      x: pos.left,\r\n      y: pos.top\r\n    };\r\n  }\r\n}\r\n\r\nexport default ColorPicker\r\n\r\n  //声明模块\r\n  // if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\r\n  //   define(function() {\r\n  //     return ColorPicker;\r\n  //   });\r\n  // } else if (typeof module !== 'undefined' && module.exports) {\r\n  //   module.exports.ColorPicker = ColorPicker;\r\n  // } else {\r\n  //   window.ColorPicker = ColorPicker;\r\n  // }\r\n\r\n\r\n\r\n","(function() {\r\n\r\n    var debug = false;\r\n\r\n    var root = this;\r\n\r\n    var EXIF = function(obj) {\r\n        if (obj instanceof EXIF) return obj;\r\n        if (!(this instanceof EXIF)) return new EXIF(obj);\r\n        this.EXIFwrapped = obj;\r\n    };\r\n\r\n    if (typeof exports !== 'undefined') {\r\n        if (typeof module !== 'undefined' && module.exports) {\r\n            exports = module.exports = EXIF;\r\n        }\r\n        exports.EXIF = EXIF;\r\n    } else {\r\n        root.EXIF = EXIF;\r\n    }\r\n\r\n    var ExifTags = EXIF.Tags = {\r\n\r\n        // version tags\r\n        0x9000 : \"ExifVersion\",             // EXIF version\r\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\r\n\r\n        // colorspace tags\r\n        0xA001 : \"ColorSpace\",              // Color space information tag\r\n\r\n        // image configuration\r\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\r\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\r\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\r\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\r\n\r\n        // user information\r\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\r\n        0x9286 : \"UserComment\",             // Comments by user\r\n\r\n        // related file\r\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\r\n\r\n        // date and time\r\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\r\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\r\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\r\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\r\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\r\n\r\n        // picture-taking conditions\r\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\r\n        0x829D : \"FNumber\",                 // F number\r\n        0x8822 : \"ExposureProgram\",         // Exposure program\r\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\r\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\r\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\r\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\r\n        0x9202 : \"ApertureValue\",           // Lens aperture\r\n        0x9203 : \"BrightnessValue\",         // Value of brightness\r\n        0x9204 : \"ExposureBias\",            // Exposure bias\r\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\r\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\r\n        0x9207 : \"MeteringMode\",            // Metering mode\r\n        0x9208 : \"LightSource\",             // Kind of light source\r\n        0x9209 : \"Flash\",                   // Flash status\r\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\r\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\r\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\r\n        0xA20C : \"SpatialFrequencyResponse\",    //\r\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\r\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\r\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\r\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\r\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\r\n        0xA217 : \"SensingMethod\",           // Image sensor type\r\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\r\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\r\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\r\n        0xA401 : \"CustomRendered\",          // Special processing\r\n        0xA402 : \"ExposureMode\",            // Exposure mode\r\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\r\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\r\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\r\n        0xA406 : \"SceneCaptureType\",        // Type of scene\r\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\r\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\r\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\r\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\r\n        0xA40B : \"DeviceSettingDescription\",    //\r\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\r\n\r\n        // other tags\r\n        0xA005 : \"InteroperabilityIFDPointer\",\r\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\r\n    };\r\n\r\n    var TiffTags = EXIF.TiffTags = {\r\n        0x0100 : \"ImageWidth\",\r\n        0x0101 : \"ImageHeight\",\r\n        0x8769 : \"ExifIFDPointer\",\r\n        0x8825 : \"GPSInfoIFDPointer\",\r\n        0xA005 : \"InteroperabilityIFDPointer\",\r\n        0x0102 : \"BitsPerSample\",\r\n        0x0103 : \"Compression\",\r\n        0x0106 : \"PhotometricInterpretation\",\r\n        0x0112 : \"Orientation\",\r\n        0x0115 : \"SamplesPerPixel\",\r\n        0x011C : \"PlanarConfiguration\",\r\n        0x0212 : \"YCbCrSubSampling\",\r\n        0x0213 : \"YCbCrPositioning\",\r\n        0x011A : \"XResolution\",\r\n        0x011B : \"YResolution\",\r\n        0x0128 : \"ResolutionUnit\",\r\n        0x0111 : \"StripOffsets\",\r\n        0x0116 : \"RowsPerStrip\",\r\n        0x0117 : \"StripByteCounts\",\r\n        0x0201 : \"JPEGInterchangeFormat\",\r\n        0x0202 : \"JPEGInterchangeFormatLength\",\r\n        0x012D : \"TransferFunction\",\r\n        0x013E : \"WhitePoint\",\r\n        0x013F : \"PrimaryChromaticities\",\r\n        0x0211 : \"YCbCrCoefficients\",\r\n        0x0214 : \"ReferenceBlackWhite\",\r\n        0x0132 : \"DateTime\",\r\n        0x010E : \"ImageDescription\",\r\n        0x010F : \"Make\",\r\n        0x0110 : \"Model\",\r\n        0x0131 : \"Software\",\r\n        0x013B : \"Artist\",\r\n        0x8298 : \"Copyright\"\r\n    };\r\n\r\n    var GPSTags = EXIF.GPSTags = {\r\n        0x0000 : \"GPSVersionID\",\r\n        0x0001 : \"GPSLatitudeRef\",\r\n        0x0002 : \"GPSLatitude\",\r\n        0x0003 : \"GPSLongitudeRef\",\r\n        0x0004 : \"GPSLongitude\",\r\n        0x0005 : \"GPSAltitudeRef\",\r\n        0x0006 : \"GPSAltitude\",\r\n        0x0007 : \"GPSTimeStamp\",\r\n        0x0008 : \"GPSSatellites\",\r\n        0x0009 : \"GPSStatus\",\r\n        0x000A : \"GPSMeasureMode\",\r\n        0x000B : \"GPSDOP\",\r\n        0x000C : \"GPSSpeedRef\",\r\n        0x000D : \"GPSSpeed\",\r\n        0x000E : \"GPSTrackRef\",\r\n        0x000F : \"GPSTrack\",\r\n        0x0010 : \"GPSImgDirectionRef\",\r\n        0x0011 : \"GPSImgDirection\",\r\n        0x0012 : \"GPSMapDatum\",\r\n        0x0013 : \"GPSDestLatitudeRef\",\r\n        0x0014 : \"GPSDestLatitude\",\r\n        0x0015 : \"GPSDestLongitudeRef\",\r\n        0x0016 : \"GPSDestLongitude\",\r\n        0x0017 : \"GPSDestBearingRef\",\r\n        0x0018 : \"GPSDestBearing\",\r\n        0x0019 : \"GPSDestDistanceRef\",\r\n        0x001A : \"GPSDestDistance\",\r\n        0x001B : \"GPSProcessingMethod\",\r\n        0x001C : \"GPSAreaInformation\",\r\n        0x001D : \"GPSDateStamp\",\r\n        0x001E : \"GPSDifferential\"\r\n    };\r\n\r\n    var StringValues = EXIF.StringValues = {\r\n        ExposureProgram : {\r\n            0 : \"Not defined\",\r\n            1 : \"Manual\",\r\n            2 : \"Normal program\",\r\n            3 : \"Aperture priority\",\r\n            4 : \"Shutter priority\",\r\n            5 : \"Creative program\",\r\n            6 : \"Action program\",\r\n            7 : \"Portrait mode\",\r\n            8 : \"Landscape mode\"\r\n        },\r\n        MeteringMode : {\r\n            0 : \"Unknown\",\r\n            1 : \"Average\",\r\n            2 : \"CenterWeightedAverage\",\r\n            3 : \"Spot\",\r\n            4 : \"MultiSpot\",\r\n            5 : \"Pattern\",\r\n            6 : \"Partial\",\r\n            255 : \"Other\"\r\n        },\r\n        LightSource : {\r\n            0 : \"Unknown\",\r\n            1 : \"Daylight\",\r\n            2 : \"Fluorescent\",\r\n            3 : \"Tungsten (incandescent light)\",\r\n            4 : \"Flash\",\r\n            9 : \"Fine weather\",\r\n            10 : \"Cloudy weather\",\r\n            11 : \"Shade\",\r\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\r\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\r\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\r\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\r\n            17 : \"Standard light A\",\r\n            18 : \"Standard light B\",\r\n            19 : \"Standard light C\",\r\n            20 : \"D55\",\r\n            21 : \"D65\",\r\n            22 : \"D75\",\r\n            23 : \"D50\",\r\n            24 : \"ISO studio tungsten\",\r\n            255 : \"Other\"\r\n        },\r\n        Flash : {\r\n            0x0000 : \"Flash did not fire\",\r\n            0x0001 : \"Flash fired\",\r\n            0x0005 : \"Strobe return light not detected\",\r\n            0x0007 : \"Strobe return light detected\",\r\n            0x0009 : \"Flash fired, compulsory flash mode\",\r\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\r\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\r\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\r\n            0x0018 : \"Flash did not fire, auto mode\",\r\n            0x0019 : \"Flash fired, auto mode\",\r\n            0x001D : \"Flash fired, auto mode, return light not detected\",\r\n            0x001F : \"Flash fired, auto mode, return light detected\",\r\n            0x0020 : \"No flash function\",\r\n            0x0041 : \"Flash fired, red-eye reduction mode\",\r\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\r\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\r\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\r\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\r\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\r\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\r\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\r\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\r\n        },\r\n        SensingMethod : {\r\n            1 : \"Not defined\",\r\n            2 : \"One-chip color area sensor\",\r\n            3 : \"Two-chip color area sensor\",\r\n            4 : \"Three-chip color area sensor\",\r\n            5 : \"Color sequential area sensor\",\r\n            7 : \"Trilinear sensor\",\r\n            8 : \"Color sequential linear sensor\"\r\n        },\r\n        SceneCaptureType : {\r\n            0 : \"Standard\",\r\n            1 : \"Landscape\",\r\n            2 : \"Portrait\",\r\n            3 : \"Night scene\"\r\n        },\r\n        SceneType : {\r\n            1 : \"Directly photographed\"\r\n        },\r\n        CustomRendered : {\r\n            0 : \"Normal process\",\r\n            1 : \"Custom process\"\r\n        },\r\n        WhiteBalance : {\r\n            0 : \"Auto white balance\",\r\n            1 : \"Manual white balance\"\r\n        },\r\n        GainControl : {\r\n            0 : \"None\",\r\n            1 : \"Low gain up\",\r\n            2 : \"High gain up\",\r\n            3 : \"Low gain down\",\r\n            4 : \"High gain down\"\r\n        },\r\n        Contrast : {\r\n            0 : \"Normal\",\r\n            1 : \"Soft\",\r\n            2 : \"Hard\"\r\n        },\r\n        Saturation : {\r\n            0 : \"Normal\",\r\n            1 : \"Low saturation\",\r\n            2 : \"High saturation\"\r\n        },\r\n        Sharpness : {\r\n            0 : \"Normal\",\r\n            1 : \"Soft\",\r\n            2 : \"Hard\"\r\n        },\r\n        SubjectDistanceRange : {\r\n            0 : \"Unknown\",\r\n            1 : \"Macro\",\r\n            2 : \"Close view\",\r\n            3 : \"Distant view\"\r\n        },\r\n        FileSource : {\r\n            3 : \"DSC\"\r\n        },\r\n\r\n        Components : {\r\n            0 : \"\",\r\n            1 : \"Y\",\r\n            2 : \"Cb\",\r\n            3 : \"Cr\",\r\n            4 : \"R\",\r\n            5 : \"G\",\r\n            6 : \"B\"\r\n        }\r\n    };\r\n\r\n    function addEvent(element, event, handler) {\r\n        if (element.addEventListener) {\r\n            element.addEventListener(event, handler, false);\r\n        } else if (element.attachEvent) {\r\n            element.attachEvent(\"on\" + event, handler);\r\n        }\r\n    }\r\n\r\n    function imageHasData(img) {\r\n        return !!(img.exifdata);\r\n    }\r\n\r\n\r\n    function base64ToArrayBuffer(base64, contentType) {\r\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\r\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\r\n        var binary = atob(base64);\r\n        var len = binary.length;\r\n        var buffer = new ArrayBuffer(len);\r\n        var view = new Uint8Array(buffer);\r\n        for (var i = 0; i < len; i++) {\r\n            view[i] = binary.charCodeAt(i);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    function objectURLToBlob(url, callback) {\r\n        var http = new XMLHttpRequest();\r\n        http.open(\"GET\", url, true);\r\n        http.responseType = \"blob\";\r\n        http.onload = function(e) {\r\n            if (this.status == 200 || this.status === 0) {\r\n                callback(this.response);\r\n            }\r\n        };\r\n        http.send();\r\n    }\r\n\r\n    function getImageData(img, callback) {\r\n        function handleBinaryFile(binFile) {\r\n            var data = findEXIFinJPEG(binFile);\r\n            var iptcdata = findIPTCinJPEG(binFile);\r\n            img.exifdata = data || {};\r\n            img.iptcdata = iptcdata || {};\r\n            if (callback) {\r\n                callback.call(img);\r\n            }\r\n        }\r\n\r\n        if (img.src) {\r\n            if (/^data\\:/i.test(img.src)) { // Data URI\r\n                var arrayBuffer = base64ToArrayBuffer(img.src);\r\n                handleBinaryFile(arrayBuffer);\r\n\r\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\r\n                var fileReader = new FileReader();\r\n                fileReader.onload = function(e) {\r\n                    handleBinaryFile(e.target.result);\r\n                };\r\n                objectURLToBlob(img.src, function (blob) {\r\n                    fileReader.readAsArrayBuffer(blob);\r\n                });\r\n            } else {\r\n                var http = new XMLHttpRequest();\r\n                http.onload = function() {\r\n                    if (this.status == 200 || this.status === 0) {\r\n                        handleBinaryFile(http.response);\r\n                    } else {\r\n                        throw \"Could not load image\";\r\n                    }\r\n                    http = null;\r\n                };\r\n                http.open(\"GET\", img.src, true);\r\n                http.responseType = \"arraybuffer\";\r\n                http.send(null);\r\n            }\r\n        } else if (window.FileReader && (img instanceof window.Blob || img instanceof window.File)) {\r\n            var fileReader = new FileReader();\r\n            fileReader.onload = function(e) {\r\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\r\n                handleBinaryFile(e.target.result);\r\n            };\r\n\r\n            fileReader.readAsArrayBuffer(img);\r\n        }\r\n    }\r\n\r\n    function findEXIFinJPEG(file) {\r\n        var dataView = new DataView(file);\r\n\r\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\r\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\r\n            if (debug) console.log(\"Not a valid JPEG\");\r\n            return false; // not a valid jpeg\r\n        }\r\n\r\n        var offset = 2,\r\n            length = file.byteLength,\r\n            marker;\r\n\r\n        while (offset < length) {\r\n            if (dataView.getUint8(offset) != 0xFF) {\r\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\r\n                return false; // not a valid marker, something is wrong\r\n            }\r\n\r\n            marker = dataView.getUint8(offset + 1);\r\n            if (debug) console.log(marker);\r\n\r\n            // we could implement handling for other markers here,\r\n            // but we're only looking for 0xFFE1 for EXIF data\r\n\r\n            if (marker == 225) {\r\n                if (debug) console.log(\"Found 0xFFE1 marker\");\r\n\r\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\r\n\r\n                // offset += 2 + file.getShortAt(offset+2, true);\r\n\r\n            } else {\r\n                offset += 2 + dataView.getUint16(offset+2);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function findIPTCinJPEG(file) {\r\n        var dataView = new DataView(file);\r\n\r\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\r\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\r\n            if (debug) console.log(\"Not a valid JPEG\");\r\n            return false; // not a valid jpeg\r\n        }\r\n\r\n        var offset = 2,\r\n            length = file.byteLength;\r\n\r\n\r\n        var isFieldSegmentStart = function(dataView, offset){\r\n            return (\r\n                dataView.getUint8(offset) === 0x38 &&\r\n                dataView.getUint8(offset+1) === 0x42 &&\r\n                dataView.getUint8(offset+2) === 0x49 &&\r\n                dataView.getUint8(offset+3) === 0x4D &&\r\n                dataView.getUint8(offset+4) === 0x04 &&\r\n                dataView.getUint8(offset+5) === 0x04\r\n            );\r\n        };\r\n\r\n        while (offset < length) {\r\n\r\n            if ( isFieldSegmentStart(dataView, offset )){\r\n\r\n                // Get the length of the name header (which is padded to an even number of bytes)\r\n                var nameHeaderLength = dataView.getUint8(offset+7);\r\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\r\n                // Check for pre photoshop 6 format\r\n                if(nameHeaderLength === 0) {\r\n                    // Always 4\r\n                    nameHeaderLength = 4;\r\n                }\r\n\r\n                var startOffset = offset + 8 + nameHeaderLength;\r\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\r\n\r\n                return readIPTCData(file, startOffset, sectionLength);\r\n\r\n                break;\r\n\r\n            }\r\n\r\n\r\n            // Not the marker, continue searching\r\n            offset++;\r\n\r\n        }\r\n\r\n    }\r\n    var IptcFieldMap = {\r\n        0x78 : 'caption',\r\n        0x6E : 'credit',\r\n        0x19 : 'keywords',\r\n        0x37 : 'dateCreated',\r\n        0x50 : 'byline',\r\n        0x55 : 'bylineTitle',\r\n        0x7A : 'captionWriter',\r\n        0x69 : 'headline',\r\n        0x74 : 'copyright',\r\n        0x0F : 'category'\r\n    };\r\n    function readIPTCData(file, startOffset, sectionLength){\r\n        var dataView = new DataView(file);\r\n        var data = {};\r\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\r\n        var segmentStartPos = startOffset;\r\n        while(segmentStartPos < startOffset+sectionLength) {\r\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\r\n                segmentType = dataView.getUint8(segmentStartPos+2);\r\n                if(segmentType in IptcFieldMap) {\r\n                    dataSize = dataView.getInt16(segmentStartPos+3);\r\n                    segmentSize = dataSize + 5;\r\n                    fieldName = IptcFieldMap[segmentType];\r\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\r\n                    // Check if we already stored a value with this name\r\n                    if(data.hasOwnProperty(fieldName)) {\r\n                        // Value already stored with this name, create multivalue field\r\n                        if(data[fieldName] instanceof Array) {\r\n                            data[fieldName].push(fieldValue);\r\n                        }\r\n                        else {\r\n                            data[fieldName] = [data[fieldName], fieldValue];\r\n                        }\r\n                    }\r\n                    else {\r\n                        data[fieldName] = fieldValue;\r\n                    }\r\n                }\r\n\r\n            }\r\n            segmentStartPos++;\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n\r\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\r\n        var entries = file.getUint16(dirStart, !bigEnd),\r\n            tags = {},\r\n            entryOffset, tag,\r\n            i;\r\n\r\n        for (i=0;i<entries;i++) {\r\n            entryOffset = dirStart + i*12 + 2;\r\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\r\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\r\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\r\n        }\r\n        return tags;\r\n    }\r\n\r\n\r\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\r\n        var type = file.getUint16(entryOffset+2, !bigEnd),\r\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\r\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\r\n            offset,\r\n            vals, val, n,\r\n            numerator, denominator;\r\n\r\n        switch (type) {\r\n            case 1: // byte, 8-bit unsigned int\r\n            case 7: // undefined, 8-bit byte, value depending on field\r\n                if (numValues == 1) {\r\n                    return file.getUint8(entryOffset + 8, !bigEnd);\r\n                } else {\r\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\r\n                    vals = [];\r\n                    for (n=0;n<numValues;n++) {\r\n                        vals[n] = file.getUint8(offset + n);\r\n                    }\r\n                    return vals;\r\n                }\r\n\r\n            case 2: // ascii, 8-bit byte\r\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\r\n                return getStringFromDB(file, offset, numValues-1);\r\n\r\n            case 3: // short, 16 bit int\r\n                if (numValues == 1) {\r\n                    return file.getUint16(entryOffset + 8, !bigEnd);\r\n                } else {\r\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\r\n                    vals = [];\r\n                    for (n=0;n<numValues;n++) {\r\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\r\n                    }\r\n                    return vals;\r\n                }\r\n\r\n            case 4: // long, 32 bit int\r\n                if (numValues == 1) {\r\n                    return file.getUint32(entryOffset + 8, !bigEnd);\r\n                } else {\r\n                    vals = [];\r\n                    for (n=0;n<numValues;n++) {\r\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\r\n                    }\r\n                    return vals;\r\n                }\r\n\r\n            case 5:    // rational = two long values, first is numerator, second is denominator\r\n                if (numValues == 1) {\r\n                    numerator = file.getUint32(valueOffset, !bigEnd);\r\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\r\n                    val = new Number(numerator / denominator);\r\n                    val.numerator = numerator;\r\n                    val.denominator = denominator;\r\n                    return val;\r\n                } else {\r\n                    vals = [];\r\n                    for (n=0;n<numValues;n++) {\r\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\r\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\r\n                        vals[n] = new Number(numerator / denominator);\r\n                        vals[n].numerator = numerator;\r\n                        vals[n].denominator = denominator;\r\n                    }\r\n                    return vals;\r\n                }\r\n\r\n            case 9: // slong, 32 bit signed int\r\n                if (numValues == 1) {\r\n                    return file.getInt32(entryOffset + 8, !bigEnd);\r\n                } else {\r\n                    vals = [];\r\n                    for (n=0;n<numValues;n++) {\r\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\r\n                    }\r\n                    return vals;\r\n                }\r\n\r\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\r\n                if (numValues == 1) {\r\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\r\n                } else {\r\n                    vals = [];\r\n                    for (n=0;n<numValues;n++) {\r\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\r\n                    }\r\n                    return vals;\r\n                }\r\n        }\r\n    }\r\n\r\n    function getStringFromDB(buffer, start, length) {\r\n        var outstr = \"\"\r\n        for (var n = start; n < start+length; n++) {\r\n            outstr += String.fromCharCode(buffer.getUint8(n));\r\n        }\r\n        return outstr;\r\n    }\r\n\r\n    function readEXIFData(file, start) {\r\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\r\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\r\n            return false;\r\n        }\r\n\r\n        var bigEnd,\r\n            tags, tag,\r\n            exifData, gpsData,\r\n            tiffOffset = start + 6;\r\n\r\n        // test for TIFF validity and endianness\r\n        if (file.getUint16(tiffOffset) == 0x4949) {\r\n            bigEnd = false;\r\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\r\n            bigEnd = true;\r\n        } else {\r\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\r\n            return false;\r\n        }\r\n\r\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\r\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\r\n            return false;\r\n        }\r\n\r\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\r\n\r\n        if (firstIFDOffset < 0x00000008) {\r\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\r\n            return false;\r\n        }\r\n\r\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\r\n\r\n        if (tags.ExifIFDPointer) {\r\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\r\n            for (tag in exifData) {\r\n                switch (tag) {\r\n                    case \"LightSource\" :\r\n                    case \"Flash\" :\r\n                    case \"MeteringMode\" :\r\n                    case \"ExposureProgram\" :\r\n                    case \"SensingMethod\" :\r\n                    case \"SceneCaptureType\" :\r\n                    case \"SceneType\" :\r\n                    case \"CustomRendered\" :\r\n                    case \"WhiteBalance\" :\r\n                    case \"GainControl\" :\r\n                    case \"Contrast\" :\r\n                    case \"Saturation\" :\r\n                    case \"Sharpness\" :\r\n                    case \"SubjectDistanceRange\" :\r\n                    case \"FileSource\" :\r\n                        exifData[tag] = StringValues[tag][exifData[tag]];\r\n                        break;\r\n\r\n                    case \"ExifVersion\" :\r\n                    case \"FlashpixVersion\" :\r\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\r\n                        break;\r\n\r\n                    case \"ComponentsConfiguration\" :\r\n                        exifData[tag] =\r\n                            StringValues.Components[exifData[tag][0]] +\r\n                            StringValues.Components[exifData[tag][1]] +\r\n                            StringValues.Components[exifData[tag][2]] +\r\n                            StringValues.Components[exifData[tag][3]];\r\n                        break;\r\n                }\r\n                tags[tag] = exifData[tag];\r\n            }\r\n        }\r\n\r\n        if (tags.GPSInfoIFDPointer) {\r\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\r\n            for (tag in gpsData) {\r\n                switch (tag) {\r\n                    case \"GPSVersionID\" :\r\n                        gpsData[tag] = gpsData[tag][0] +\r\n                            \".\" + gpsData[tag][1] +\r\n                            \".\" + gpsData[tag][2] +\r\n                            \".\" + gpsData[tag][3];\r\n                        break;\r\n                }\r\n                tags[tag] = gpsData[tag];\r\n            }\r\n        }\r\n\r\n        return tags;\r\n    }\r\n\r\n    EXIF.getData = function(img, callback) {\r\n        if ((img instanceof Image || img instanceof HTMLImageElement) && !img.complete) return false;\r\n\r\n        if (!imageHasData(img)) {\r\n            getImageData(img, callback);\r\n        } else {\r\n            if (callback) {\r\n                callback.call(img);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    EXIF.getTag = function(img, tag) {\r\n        if (!imageHasData(img)) return;\r\n        return img.exifdata[tag];\r\n    }\r\n    \r\n    EXIF.getIptcTag = function(img, tag) {\r\n        if (!imageHasData(img)) return;\r\n        return img.iptcdata[tag];\r\n    }\r\n\r\n    EXIF.getAllTags = function(img) {\r\n        if (!imageHasData(img)) return {};\r\n        var a,\r\n            data = img.exifdata,\r\n            tags = {};\r\n        for (a in data) {\r\n            if (data.hasOwnProperty(a)) {\r\n                tags[a] = data[a];\r\n            }\r\n        }\r\n        return tags;\r\n    }\r\n    \r\n    EXIF.getAllIptcTags = function(img) {\r\n        if (!imageHasData(img)) return {};\r\n        var a,\r\n            data = img.iptcdata,\r\n            tags = {};\r\n        for (a in data) {\r\n            if (data.hasOwnProperty(a)) {\r\n                tags[a] = data[a];\r\n            }\r\n        }\r\n        return tags;\r\n    }\r\n\r\n    EXIF.pretty = function(img) {\r\n        if (!imageHasData(img)) return \"\";\r\n        var a,\r\n            data = img.exifdata,\r\n            strPretty = \"\";\r\n        for (a in data) {\r\n            if (data.hasOwnProperty(a)) {\r\n                if (typeof data[a] == \"object\") {\r\n                    if (data[a] instanceof Number) {\r\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\r\n                    } else {\r\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\r\n                    }\r\n                } else {\r\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\r\n                }\r\n            }\r\n        }\r\n        return strPretty;\r\n    }\r\n\r\n    EXIF.readFromBinaryFile = function(file) {\r\n        return findEXIFinJPEG(file);\r\n    }\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('exif-js', [], function() {\r\n            return EXIF;\r\n        });\r\n    }\r\n}.call(this));\r\n\r\n","'use strict';\r\n\r\n/**\r\n * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.\r\n *\r\n * @codingstandard ftlabs-jsv2\r\n * @copyright The Financial Times Limited [All Rights Reserved]\r\n * @license MIT License (see LICENSE.txt)\r\n */\r\n\r\n/*jslint browser:true, node:true*/\r\n/*global define, Event, Node*/\r\n\r\n\r\n/**\r\n * Instantiate fast-clicking listeners on the specified layer.\r\n *\r\n * @constructor\r\n * @param {Element} layer The layer to listen on\r\n * @param {Object} [options={}] The options to override the defaults\r\n */\r\nfunction FastClick(layer, options) {\r\n\tvar oldOnClick;\r\n\r\n\toptions = options || {};\r\n\r\n\t/**\r\n\t * Whether a click is currently being tracked.\r\n\t *\r\n\t * @type boolean\r\n\t */\r\n\tthis.trackingClick = false;\r\n\r\n\r\n\t/**\r\n\t * Timestamp for when click tracking started.\r\n\t *\r\n\t * @type number\r\n\t */\r\n\tthis.trackingClickStart = 0;\r\n\r\n\r\n\t/**\r\n\t * The element being tracked for a click.\r\n\t *\r\n\t * @type EventTarget\r\n\t */\r\n\tthis.targetElement = null;\r\n\r\n\r\n\t/**\r\n\t * X-coordinate of touch start event.\r\n\t *\r\n\t * @type number\r\n\t */\r\n\tthis.touchStartX = 0;\r\n\r\n\r\n\t/**\r\n\t * Y-coordinate of touch start event.\r\n\t *\r\n\t * @type number\r\n\t */\r\n\tthis.touchStartY = 0;\r\n\r\n\r\n\t/**\r\n\t * ID of the last touch, retrieved from Touch.identifier.\r\n\t *\r\n\t * @type number\r\n\t */\r\n\tthis.lastTouchIdentifier = 0;\r\n\r\n\r\n\t/**\r\n\t * Touchmove boundary, beyond which a click will be cancelled.\r\n\t *\r\n\t * @type number\r\n\t */\r\n\tthis.touchBoundary = options.touchBoundary || 10;\r\n\r\n\r\n\t/**\r\n\t * The FastClick layer.\r\n\t *\r\n\t * @type Element\r\n\t */\r\n\tthis.layer = layer;\r\n\r\n\t/**\r\n\t * The minimum time between tap(touchstart and touchend) events\r\n\t *\r\n\t * @type number\r\n\t */\r\n\tthis.tapDelay = options.tapDelay || 200;\r\n\r\n\t/**\r\n\t * The maximum time for a tap\r\n\t *\r\n\t * @type number\r\n\t */\r\n\tthis.tapTimeout = options.tapTimeout || 700;\r\n\r\n\tif (FastClick.notNeeded(layer)) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Some old versions of Android don't have Function.prototype.bind\r\n\tfunction bind(method, context) {\r\n\t\treturn function() { return method.apply(context, arguments); };\r\n\t}\r\n\r\n\r\n\tvar methods = ['onMouse', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel'];\r\n\tvar context = this;\r\n\tfor (var i = 0, l = methods.length; i < l; i++) {\r\n\t\tcontext[methods[i]] = bind(context[methods[i]], context);\r\n\t}\r\n\r\n\t// Set up event handlers as required\r\n\tif (deviceIsAndroid) {\r\n\t\tlayer.addEventListener('mouseover', this.onMouse, true);\r\n\t\tlayer.addEventListener('mousedown', this.onMouse, true);\r\n\t\tlayer.addEventListener('mouseup', this.onMouse, true);\r\n\t}\r\n\r\n\tlayer.addEventListener('click', this.onClick, true);\r\n\tlayer.addEventListener('touchstart', this.onTouchStart, false);\r\n\tlayer.addEventListener('touchmove', this.onTouchMove, false);\r\n\tlayer.addEventListener('touchend', this.onTouchEnd, false);\r\n\tlayer.addEventListener('touchcancel', this.onTouchCancel, false);\r\n\r\n\t// Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)\r\n\t// which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick\r\n\t// layer when they are cancelled.\r\n\tif (!Event.prototype.stopImmediatePropagation) {\r\n\t\tlayer.removeEventListener = function(type, callback, capture) {\r\n\t\t\tvar rmv = Node.prototype.removeEventListener;\r\n\t\t\tif (type === 'click') {\r\n\t\t\t\trmv.call(layer, type, callback.hijacked || callback, capture);\r\n\t\t\t} else {\r\n\t\t\t\trmv.call(layer, type, callback, capture);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlayer.addEventListener = function(type, callback, capture) {\r\n\t\t\tvar adv = Node.prototype.addEventListener;\r\n\t\t\tif (type === 'click') {\r\n\t\t\t\tadv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {\r\n\t\t\t\t\tif (!event.propagationStopped) {\r\n\t\t\t\t\t\tcallback(event);\r\n\t\t\t\t\t}\r\n\t\t\t\t}), capture);\r\n\t\t\t} else {\r\n\t\t\t\tadv.call(layer, type, callback, capture);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// If a handler is already declared in the element's onclick attribute, it will be fired before\r\n\t// FastClick's onClick handler. Fix this by pulling out the user-defined handler function and\r\n\t// adding it as listener.\r\n\tif (typeof layer.onclick === 'function') {\r\n\r\n\t\t// Android browser on at least 3.2 requires a new reference to the function in layer.onclick\r\n\t\t// - the old one won't work if passed to addEventListener directly.\r\n\t\toldOnClick = layer.onclick;\r\n\t\tlayer.addEventListener('click', function(event) {\r\n\t\t\toldOnClick(event);\r\n\t\t}, false);\r\n\t\tlayer.onclick = null;\r\n\t}\r\n}\r\n\r\n/**\r\n* Windows Phone 8.1 fakes user agent string to look like Android and iPhone.\r\n*\r\n* @type boolean\r\n*/\r\nvar deviceIsWindowsPhone = navigator.userAgent.indexOf(\"Windows Phone\") >= 0;\r\n\r\n/**\r\n * Android requires exceptions.\r\n *\r\n * @type boolean\r\n */\r\nvar deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0 && !deviceIsWindowsPhone;\r\n\r\n\r\n/**\r\n * iOS requires exceptions.\r\n *\r\n * @type boolean\r\n */\r\nvar deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent) && !deviceIsWindowsPhone;\r\n\r\n\r\n/**\r\n * iOS 4 requires an exception for select elements.\r\n *\r\n * @type boolean\r\n */\r\nvar deviceIsIOS4 = deviceIsIOS && (/OS 4_\\d(_\\d)?/).test(navigator.userAgent);\r\n\r\n\r\n/**\r\n * iOS 6.0-7.* requires the target element to be manually derived\r\n *\r\n * @type boolean\r\n */\r\nvar deviceIsIOSWithBadTarget = deviceIsIOS && (/OS [6-7]_\\d/).test(navigator.userAgent);\r\n\r\n/**\r\n * BlackBerry requires exceptions.\r\n *\r\n * @type boolean\r\n */\r\nvar deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0;\r\n\r\n/**\r\n * Determine whether a given element requires a native click.\r\n *\r\n * @param {EventTarget|Element} target Target DOM element\r\n * @returns {boolean} Returns true if the element needs a native click\r\n */\r\nFastClick.prototype.needsClick = function(target) {\r\n\tswitch (target.nodeName.toLowerCase()) {\r\n\r\n\t// Don't send a synthetic click to disabled inputs (issue #62)\r\n\tcase 'button':\r\n\tcase 'select':\r\n\tcase 'textarea':\r\n\t\tif (target.disabled) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tbreak;\r\n\tcase 'input':\r\n\r\n\t\t// File inputs need real clicks on iOS 6 due to a browser bug (issue #68)\r\n\t\tif ((deviceIsIOS && target.type === 'file') || target.disabled) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tbreak;\r\n\tcase 'label':\r\n\tcase 'iframe': // iOS8 homescreen apps can prevent events bubbling into frames\r\n\tcase 'video':\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn (/\\bneedsclick\\b/).test(target.className);\r\n};\r\n\r\n\r\n/**\r\n * Determine whether a given element requires a call to focus to simulate click into element.\r\n *\r\n * @param {EventTarget|Element} target Target DOM element\r\n * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.\r\n */\r\nFastClick.prototype.needsFocus = function(target) {\r\n\tswitch (target.nodeName.toLowerCase()) {\r\n\tcase 'textarea':\r\n\t\treturn true;\r\n\tcase 'select':\r\n\t\treturn !deviceIsAndroid;\r\n\tcase 'input':\r\n\t\tswitch (target.type) {\r\n\t\tcase 'button':\r\n\t\tcase 'checkbox':\r\n\t\tcase 'file':\r\n\t\tcase 'image':\r\n\t\tcase 'radio':\r\n\t\tcase 'submit':\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// No point in attempting to focus disabled inputs\r\n\t\treturn !target.disabled && !target.readOnly;\r\n\tdefault:\r\n\t\treturn (/\\bneedsfocus\\b/).test(target.className);\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Send a click event to the specified element.\r\n *\r\n * @param {EventTarget|Element} targetElement\r\n * @param {Event} event\r\n */\r\nFastClick.prototype.sendClick = function(targetElement, event) {\r\n\tvar clickEvent, touch;\r\n\r\n\t// On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)\r\n\tif (document.activeElement && document.activeElement !== targetElement) {\r\n\t\tdocument.activeElement.blur();\r\n\t}\r\n\r\n\ttouch = event.changedTouches[0];\r\n\r\n\t// Synthesise a click event, with an extra attribute so it can be tracked\r\n\tclickEvent = document.createEvent('MouseEvents');\r\n\tclickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\r\n\tclickEvent.forwardedTouchEvent = true;\r\n\ttargetElement.dispatchEvent(clickEvent);\r\n};\r\n\r\nFastClick.prototype.determineEventType = function(targetElement) {\r\n\r\n\t//Issue #159: Android Chrome Select Box does not open with a synthetic click event\r\n\tif (deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {\r\n\t\treturn 'mousedown';\r\n\t}\r\n\r\n\treturn 'click';\r\n};\r\n\r\n\r\n/**\r\n * @param {EventTarget|Element} targetElement\r\n */\r\nFastClick.prototype.focus = function(targetElement) {\r\n\tvar length;\r\n\r\n\t// Issue #160: on iOS 7, some input elements (e.g. date datetime month) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.\r\n\tif (deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time' && targetElement.type !== 'month') {\r\n\t\tlength = targetElement.value.length;\r\n\t\ttargetElement.setSelectionRange(length, length);\r\n\t} else {\r\n\t\ttargetElement.focus();\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.\r\n *\r\n * @param {EventTarget|Element} targetElement\r\n */\r\nFastClick.prototype.updateScrollParent = function(targetElement) {\r\n\tvar scrollParent, parentElement;\r\n\r\n\tscrollParent = targetElement.fastClickScrollParent;\r\n\r\n\t// Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the\r\n\t// target element was moved to another parent.\r\n\tif (!scrollParent || !scrollParent.contains(targetElement)) {\r\n\t\tparentElement = targetElement;\r\n\t\tdo {\r\n\t\t\tif (parentElement.scrollHeight > parentElement.offsetHeight) {\r\n\t\t\t\tscrollParent = parentElement;\r\n\t\t\t\ttargetElement.fastClickScrollParent = parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tparentElement = parentElement.parentElement;\r\n\t\t} while (parentElement);\r\n\t}\r\n\r\n\t// Always update the scroll top tracker if possible.\r\n\tif (scrollParent) {\r\n\t\tscrollParent.fastClickLastScrollTop = scrollParent.scrollTop;\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * @param {EventTarget} targetElement\r\n * @returns {Element|EventTarget}\r\n */\r\nFastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {\r\n\r\n\t// On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.\r\n\tif (eventTarget.nodeType === Node.TEXT_NODE) {\r\n\t\treturn eventTarget.parentNode;\r\n\t}\r\n\r\n\treturn eventTarget;\r\n};\r\n\r\n\r\n/**\r\n * On touch start, record the position and scroll offset.\r\n *\r\n * @param {Event} event\r\n * @returns {boolean}\r\n */\r\nFastClick.prototype.onTouchStart = function(event) {\r\n\tvar targetElement, touch, selection;\r\n\r\n\t// Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).\r\n\tif (event.targetTouches.length > 1) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\ttargetElement = this.getTargetElementFromEventTarget(event.target);\r\n\ttouch = event.targetTouches[0];\r\n\t\r\n\tif (deviceIsIOS) {\r\n\r\n\t\t// Only trusted events will deselect text on iOS (issue #49)\r\n\t\tselection = window.getSelection();\r\n\t\tif (selection.rangeCount && !selection.isCollapsed) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (!deviceIsIOS4) {\r\n\r\n\t\t\t// Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):\r\n\t\t\t// when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched\r\n\t\t\t// with the same identifier as the touch event that previously triggered the click that triggered the alert.\r\n\t\t\t// Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an\r\n\t\t\t// immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.\r\n\t\t\t// Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,\r\n\t\t\t// which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,\r\n\t\t\t// random integers, it's safe to to continue if the identifier is 0 here.\r\n\t\t\tif (touch.identifier && touch.identifier === this.lastTouchIdentifier) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastTouchIdentifier = touch.identifier;\r\n\r\n\t\t\t// If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:\r\n\t\t\t// 1) the user does a fling scroll on the scrollable layer\r\n\t\t\t// 2) the user stops the fling scroll with another tap\r\n\t\t\t// then the event.target of the last 'touchend' event will be the element that was under the user's finger\r\n\t\t\t// when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check\r\n\t\t\t// is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).\r\n\t\t\tthis.updateScrollParent(targetElement);\r\n\t\t}\r\n\t}\r\n\r\n\tthis.trackingClick = true;\r\n\tthis.trackingClickStart = event.timeStamp;\r\n\tthis.targetElement = targetElement;\r\n\r\n\tthis.touchStartX = touch.pageX;\r\n\tthis.touchStartY = touch.pageY;\r\n\r\n\t// Prevent phantom clicks on fast double-tap (issue #36)\r\n\tif ((event.timeStamp - this.lastClickTime) < this.tapDelay) {\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/**\r\n * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.\r\n *\r\n * @param {Event} event\r\n * @returns {boolean}\r\n */\r\nFastClick.prototype.touchHasMoved = function(event) {\r\n\tvar touch = event.changedTouches[0], boundary = this.touchBoundary;\r\n\r\n\tif (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/**\r\n * Update the last position.\r\n *\r\n * @param {Event} event\r\n * @returns {boolean}\r\n */\r\nFastClick.prototype.onTouchMove = function(event) {\r\n\tif (!this.trackingClick) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// If the touch has moved, cancel the click tracking\r\n\tif (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {\r\n\t\tthis.trackingClick = false;\r\n\t\tthis.targetElement = null;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/**\r\n * Attempt to find the labelled control for the given label element.\r\n *\r\n * @param {EventTarget|HTMLLabelElement} labelElement\r\n * @returns {Element|null}\r\n */\r\nFastClick.prototype.findControl = function(labelElement) {\r\n\r\n\t// Fast path for newer browsers supporting the HTML5 control attribute\r\n\tif (labelElement.control !== undefined) {\r\n\t\treturn labelElement.control;\r\n\t}\r\n\r\n\t// All browsers under test that support touch events also support the HTML5 htmlFor attribute\r\n\tif (labelElement.htmlFor) {\r\n\t\treturn document.getElementById(labelElement.htmlFor);\r\n\t}\r\n\r\n\t// If no for attribute exists, attempt to retrieve the first labellable descendant element\r\n\t// the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label\r\n\treturn labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');\r\n};\r\n\r\n\r\n/**\r\n * On touch end, determine whether to send a click event at once.\r\n *\r\n * @param {Event} event\r\n * @returns {boolean}\r\n */\r\nFastClick.prototype.onTouchEnd = function(event) {\r\n\tvar forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement;\r\n\r\n\tif (!this.trackingClick) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Prevent phantom clicks on fast double-tap (issue #36)\r\n\tif ((event.timeStamp - this.lastClickTime) < this.tapDelay) {\r\n\t\tthis.cancelNextClick = true;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ((event.timeStamp - this.trackingClickStart) > this.tapTimeout) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Reset to prevent wrong click cancel on input (issue #156).\r\n\tthis.cancelNextClick = false;\r\n\r\n\tthis.lastClickTime = event.timeStamp;\r\n\r\n\ttrackingClickStart = this.trackingClickStart;\r\n\tthis.trackingClick = false;\r\n\tthis.trackingClickStart = 0;\r\n\r\n\t// On some iOS devices, the targetElement supplied with the event is invalid if the layer\r\n\t// is performing a transition or scroll, and has to be re-detected manually. Note that\r\n\t// for this to function correctly, it must be called *after* the event target is checked!\r\n\t// See issue #57; also filed as rdar://13048589 .\r\n\tif (deviceIsIOSWithBadTarget) {\r\n\t\ttouch = event.changedTouches[0];\r\n\r\n\t\t// In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null\r\n\t\ttargetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;\r\n\t\ttargetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;\r\n\t}\r\n\r\n\ttargetTagName = targetElement.tagName.toLowerCase();\r\n\tif (targetTagName === 'label') {\r\n\t\tforElement = this.findControl(targetElement);\r\n\t\tif (forElement) {\r\n\t\t\tthis.focus(targetElement);\r\n\t\t\tif (deviceIsAndroid) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\ttargetElement = forElement;\r\n\t\t}\r\n\t} else if (this.needsFocus(targetElement)) {\r\n\r\n\t\t// Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.\r\n\t\t// Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).\r\n\t\tif ((event.timeStamp - trackingClickStart) > 100 || (deviceIsIOS && window.top !== window && targetTagName === 'input')) {\r\n\t\t\tthis.targetElement = null;\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.focus(targetElement);\r\n\t\tthis.sendClick(targetElement, event);\r\n\r\n\t\t// Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.\r\n\t\t// Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)\r\n\t\tif (!deviceIsIOS || targetTagName !== 'select') {\r\n\t\t\tthis.targetElement = null;\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (deviceIsIOS && !deviceIsIOS4) {\r\n\r\n\t\t// Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled\r\n\t\t// and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).\r\n\t\tscrollParent = targetElement.fastClickScrollParent;\r\n\t\tif (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t// Prevent the actual click from going though - unless the target node is marked as requiring\r\n\t// real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.\r\n\tif (!this.needsClick(targetElement)) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.sendClick(targetElement, event);\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/**\r\n * On touch cancel, stop tracking the click.\r\n *\r\n * @returns {void}\r\n */\r\nFastClick.prototype.onTouchCancel = function() {\r\n\tthis.trackingClick = false;\r\n\tthis.targetElement = null;\r\n};\r\n\r\n\r\n/**\r\n * Determine mouse events which should be permitted.\r\n *\r\n * @param {Event} event\r\n * @returns {boolean}\r\n */\r\nFastClick.prototype.onMouse = function(event) {\r\n\r\n\t// If a target element was never set (because a touch event was never fired) allow the event\r\n\tif (!this.targetElement) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (event.forwardedTouchEvent) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Programmatically generated events targeting a specific element should be permitted\r\n\tif (!event.cancelable) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Derive and check the target element to see whether the mouse event needs to be permitted;\r\n\t// unless explicitly enabled, prevent non-touch click events from triggering actions,\r\n\t// to prevent ghost/doubleclicks.\r\n\tif (!this.needsClick(this.targetElement) || this.cancelNextClick) {\r\n\r\n\t\t// Prevent any user-added listeners declared on FastClick element from being fired.\r\n\t\tif (event.stopImmediatePropagation) {\r\n\t\t\tevent.stopImmediatePropagation();\r\n\t\t} else {\r\n\r\n\t\t\t// Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)\r\n\t\t\tevent.propagationStopped = true;\r\n\t\t}\r\n\r\n\t\t// Cancel the event\r\n\t\tevent.stopPropagation();\r\n\t\tevent.preventDefault();\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// If the mouse event is permitted, return true for the action to go through.\r\n\treturn true;\r\n};\r\n\r\n\r\n/**\r\n * On actual clicks, determine whether this is a touch-generated click, a click action occurring\r\n * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or\r\n * an actual click which should be permitted.\r\n *\r\n * @param {Event} event\r\n * @returns {boolean}\r\n */\r\nFastClick.prototype.onClick = function(event) {\r\n\tvar permitted;\r\n\r\n\t// It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.\r\n\tif (this.trackingClick) {\r\n\t\tthis.targetElement = null;\r\n\t\tthis.trackingClick = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.\r\n\tif (event.target.type === 'submit' && event.detail === 0) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpermitted = this.onMouse(event);\r\n\r\n\t// Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.\r\n\tif (!permitted) {\r\n\t\tthis.targetElement = null;\r\n\t}\r\n\r\n\t// If clicks are permitted, return true for the action to go through.\r\n\treturn permitted;\r\n};\r\n\r\n\r\n/**\r\n * Remove all FastClick's event listeners.\r\n *\r\n * @returns {void}\r\n */\r\nFastClick.prototype.destroy = function() {\r\n\tvar layer = this.layer;\r\n\r\n\tif (deviceIsAndroid) {\r\n\t\tlayer.removeEventListener('mouseover', this.onMouse, true);\r\n\t\tlayer.removeEventListener('mousedown', this.onMouse, true);\r\n\t\tlayer.removeEventListener('mouseup', this.onMouse, true);\r\n\t}\r\n\r\n\tlayer.removeEventListener('click', this.onClick, true);\r\n\tlayer.removeEventListener('touchstart', this.onTouchStart, false);\r\n\tlayer.removeEventListener('touchmove', this.onTouchMove, false);\r\n\tlayer.removeEventListener('touchend', this.onTouchEnd, false);\r\n\tlayer.removeEventListener('touchcancel', this.onTouchCancel, false);\r\n};\r\n\r\n\r\n/**\r\n * Check whether FastClick is needed.\r\n *\r\n * @param {Element} layer The layer to listen on\r\n */\r\nFastClick.notNeeded = function(layer) {\r\n\tvar metaViewport;\r\n\tvar chromeVersion;\r\n\tvar blackberryVersion;\r\n\tvar firefoxVersion;\r\n\r\n\t// Devices that don't support touch don't need FastClick\r\n\tif (typeof window.ontouchstart === 'undefined') {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Chrome version - zero for other browsers\r\n\tchromeVersion = +(/Chrome\\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];\r\n\r\n\tif (chromeVersion) {\r\n\r\n\t\tif (deviceIsAndroid) {\r\n\t\t\tmetaViewport = document.querySelector('meta[name=viewport]');\r\n\r\n\t\t\tif (metaViewport) {\r\n\t\t\t\t// Chrome on Android with user-scalable=\"no\" doesn't need FastClick (issue #89)\r\n\t\t\t\tif (metaViewport.content.indexOf('user-scalable=no') !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\t// Chrome 32 and above with width=device-width or less don't need FastClick\r\n\t\t\t\tif (chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Chrome desktop doesn't need FastClick (issue #15)\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tif (deviceIsBlackBerry10) {\r\n\t\tblackberryVersion = navigator.userAgent.match(/Version\\/([0-9]*)\\.([0-9]*)/);\r\n\r\n\t\t// BlackBerry 10.3+ does not require Fastclick library.\r\n\t\t// https://github.com/ftlabs/fastclick/issues/251\r\n\t\tif (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) {\r\n\t\t\tmetaViewport = document.querySelector('meta[name=viewport]');\r\n\r\n\t\t\tif (metaViewport) {\r\n\t\t\t\t// user-scalable=no eliminates click delay.\r\n\t\t\t\tif (metaViewport.content.indexOf('user-scalable=no') !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\t// width=device-width (or less than device-width) eliminates click delay.\r\n\t\t\t\tif (document.documentElement.scrollWidth <= window.outerWidth) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// IE10 with -ms-touch-action: none or manipulation, which disables double-tap-to-zoom (issue #97)\r\n\tif (layer.style.msTouchAction === 'none' || layer.style.touchAction === 'manipulation') {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Firefox version - zero for other browsers\r\n\tfirefoxVersion = +(/Firefox\\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];\r\n\r\n\tif (firefoxVersion >= 27) {\r\n\t\t// Firefox 27+ does not have tap delay if the content is not zoomable - https://bugzilla.mozilla.org/show_bug.cgi?id=922896\r\n\r\n\t\tmetaViewport = document.querySelector('meta[name=viewport]');\r\n\t\tif (metaViewport && (metaViewport.content.indexOf('user-scalable=no') !== -1 || document.documentElement.scrollWidth <= window.outerWidth)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t// IE11: prefixed -ms-touch-action is no longer supported and it's recomended to use non-prefixed version\r\n\t// http://msdn.microsoft.com/en-us/library/windows/apps/Hh767313.aspx\r\n\tif (layer.style.touchAction === 'none' || layer.style.touchAction === 'manipulation') {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/**\r\n * Factory method for creating a FastClick object\r\n *\r\n * @param {Element} layer The layer to listen on\r\n * @param {Object} [options={}] The options to override the defaults\r\n */\r\nFastClick.attach = function(layer, options) {\r\n\treturn new FastClick(layer, options);\r\n};\r\n\r\nexport default FastClick\r\n","var ImageFilters = {};\r\nImageFilters.utils = {\r\n    initSampleCanvas: function () {\r\n        var _canvas = document.createElement('canvas'),\r\n            _context = _canvas.getContext('2d');\r\n        \r\n        _canvas.width = 0;\r\n        _canvas.height = 0;\r\n        \r\n        this.getSampleCanvas = function () {\r\n            return _canvas;\r\n        };\r\n        this.getSampleContext = function () {\r\n            return _context;\r\n        };\r\n        this.createImageData = (_context.createImageData) ? function (w, h) {\r\n                return _context.createImageData(w, h);\r\n            } : function (w, h) {\r\n                return new ImageData(w, h);\r\n            };\r\n    },\r\n    getSampleCanvas: function () {\r\n        this.initSampleCanvas();\r\n        return this.getSampleCanvas();\r\n    },\r\n    getSampleContext: function () {\r\n        this.initSampleCanvas();\r\n        return this.getSampleContext();\r\n    },\r\n    createImageData: function (w, h) {\r\n        this.initSampleCanvas();\r\n        return this.createImageData(w, h);\r\n    },\r\n    clamp: function (value) {\r\n        return value > 255 ? 255 : value < 0 ? 0 : value;\r\n    },\r\n    buildMap: function (f) {\r\n        for (var m = [], k = 0, v; k < 256; k += 1) {\r\n            m[k] = (v = f(k)) > 255 ? 255 : v < 0 ? 0 : v | 0;\r\n        }\r\n        return m;\r\n    },\r\n    applyMap: function (src, dst, map) {\r\n        for (var i = 0, l = src.length; i < l; i += 4) {\r\n            dst[i]     = map[src[i]];\r\n            dst[i + 1] = map[src[i + 1]];\r\n            dst[i + 2] = map[src[i + 2]];\r\n            dst[i + 3] = src[i + 3];\r\n        }\r\n    },\r\n    mapRGB: function (src, dst, func) {\r\n        this.applyMap(src, dst, this.buildMap(func));\r\n    },\r\n    getPixelIndex: function (x, y, width, height, edge) {\r\n        if (x < 0 || x >= width || y < 0 || y >= height) {\r\n            switch (edge) {\r\n            case 1: // clamp\r\n                x = x < 0 ? 0 : x >= width ? width - 1 : x;\r\n                y = y < 0 ? 0 : y >= height ? height - 1 : y;\r\n                break;\r\n            case 2: // wrap\r\n                x = (x %= width) < 0 ? x + width : x;\r\n                y = (y %= height) < 0 ? y + height : y;\r\n                break;\r\n            default: // transparent\r\n                return null;\r\n            }\r\n        }\r\n        return (y * width + x) << 2;\r\n    },\r\n    getPixel: function (src, x, y, width, height, edge) {\r\n        if (x < 0 || x >= width || y < 0 || y >= height) {\r\n            switch (edge) {\r\n            case 1: // clamp\r\n                x = x < 0 ? 0 : x >= width ? width - 1 : x;\r\n                y = y < 0 ? 0 : y >= height ? height - 1 : y;\r\n                break;\r\n            case 2: // wrap\r\n                x = (x %= width) < 0 ? x + width : x;\r\n                y = (y %= height) < 0 ? y + height : y;\r\n                break;\r\n            default: // transparent\r\n                return 0;\r\n            }\r\n        }\r\n        \r\n        var i = (y * width + x) << 2;\r\n        \r\n        // ARGB\r\n        return src[i + 3] << 24 | src[i] << 16 | src[i + 1] << 8 | src[i + 2];\r\n    },\r\n    getPixelByIndex: function (src, i) {\r\n        return src[i + 3] << 24 | src[i] << 16 | src[i + 1] << 8 | src[i + 2];\r\n    },\r\n    /**\r\n     * one of the most important functions in this library.\r\n     * I want to make this as fast as possible.\r\n     */\r\n    copyBilinear: function (src, x, y, width, height, dst, dstIndex, edge) {\r\n        var fx = x < 0 ? x - 1 | 0 : x | 0, // Math.floor(x)\r\n            fy = y < 0 ? y - 1 | 0 : y | 0, // Math.floor(y)\r\n            wx = x - fx,\r\n            wy = y - fy,\r\n            i,\r\n            nw = 0, ne = 0, sw = 0, se = 0,\r\n            cx, cy,\r\n            r, g, b, a;\r\n        \r\n        if (fx >= 0 && fx < (width - 1) && fy >= 0 && fy < (height - 1)) {\r\n            // in bounds, no edge actions required\r\n            i = (fy * width + fx) << 2;\r\n            \r\n            if (wx || wy) {\r\n                nw = src[i + 3] << 24 | src[i] << 16 | src[i + 1] << 8 | src[i + 2];\r\n                \r\n                i += 4;\r\n                ne = src[i + 3] << 24 | src[i] << 16 | src[i + 1] << 8 | src[i + 2];\r\n                \r\n                i = (i - 8) + (width << 2);\r\n                sw = src[i + 3] << 24 | src[i] << 16 | src[i + 1] << 8 | src[i + 2];\r\n                \r\n                i += 4;\r\n                se = src[i + 3] << 24 | src[i] << 16 | src[i + 1] << 8 | src[i + 2];\r\n            }\r\n            else {\r\n                // no interpolation required\r\n                dst[dstIndex]     = src[i];\r\n                dst[dstIndex + 1] = src[i + 1];\r\n                dst[dstIndex + 2] = src[i + 2];\r\n                dst[dstIndex + 3] = src[i + 3];\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // edge actions required\r\n            nw = this.getPixel(src, fx, fy, width, height, edge);\r\n            \r\n            if (wx || wy) {\r\n                ne = this.getPixel(src, fx + 1, fy, width, height, edge);\r\n                sw = this.getPixel(src, fx, fy + 1, width, height, edge);\r\n                se = this.getPixel(src, fx + 1, fy + 1, width, height, edge);\r\n            }\r\n            else {\r\n                // no interpolation required\r\n                dst[dstIndex]     = nw >> 16 & 0xFF;\r\n                dst[dstIndex + 1] = nw >> 8  & 0xFF;\r\n                dst[dstIndex + 2] = nw       & 0xFF;\r\n                dst[dstIndex + 3] = nw >> 24 & 0xFF;\r\n                return;\r\n            }\r\n        }\r\n        \r\n        cx = 1 - wx;\r\n        cy = 1 - wy;\r\n        r = ((nw >> 16 & 0xFF) * cx + (ne >> 16 & 0xFF) * wx) * cy + ((sw >> 16 & 0xFF) * cx + (se >> 16 & 0xFF) * wx) * wy;\r\n        g = ((nw >> 8  & 0xFF) * cx + (ne >> 8  & 0xFF) * wx) * cy + ((sw >> 8  & 0xFF) * cx + (se >> 8  & 0xFF) * wx) * wy;\r\n        b = ((nw       & 0xFF) * cx + (ne       & 0xFF) * wx) * cy + ((sw       & 0xFF) * cx + (se       & 0xFF) * wx) * wy;\r\n        a = ((nw >> 24 & 0xFF) * cx + (ne >> 24 & 0xFF) * wx) * cy + ((sw >> 24 & 0xFF) * cx + (se >> 24 & 0xFF) * wx) * wy;\r\n        \r\n        dst[dstIndex]     = r > 255 ? 255 : r < 0 ? 0 : r | 0;\r\n        dst[dstIndex + 1] = g > 255 ? 255 : g < 0 ? 0 : g | 0;\r\n        dst[dstIndex + 2] = b > 255 ? 255 : b < 0 ? 0 : b | 0;\r\n        dst[dstIndex + 3] = a > 255 ? 255 : a < 0 ? 0 : a | 0;\r\n    },\r\n    /**\r\n     * @param r 0 <= n <= 255\r\n     * @param g 0 <= n <= 255\r\n     * @param b 0 <= n <= 255\r\n     * @return Array(h, s, l)\r\n     */\r\n    rgbToHsl: function (r, g, b) {\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n\r\n//        var max = Math.max(r, g, b),\r\n//            min = Math.min(r, g, b),\r\n        var max = (r > g) ? (r > b) ? r : b : (g > b) ? g : b,\r\n            min = (r < g) ? (r < b) ? r : b : (g < b) ? g : b,\r\n            chroma = max - min,\r\n            h = 0,\r\n            s = 0,\r\n            // Lightness\r\n            l = (min + max) / 2;\r\n\r\n        if (chroma !== 0) {\r\n            // Hue\r\n            if (r === max) {\r\n                h = (g - b) / chroma + ((g < b) ? 6 : 0);\r\n            }\r\n            else if (g === max) {\r\n                h = (b - r) / chroma + 2;\r\n            }\r\n            else {\r\n                h = (r - g) / chroma + 4;\r\n            }\r\n            h /= 6;\r\n\r\n            // Saturation\r\n            s = (l > 0.5) ? chroma / (2 - max - min) : chroma / (max + min);\r\n        }\r\n\r\n        return [h, s, l];\r\n    },\r\n    /**\r\n     * @param h 0.0 <= n <= 1.0\r\n     * @param s 0.0 <= n <= 1.0\r\n     * @param l 0.0 <= n <= 1.0\r\n     * @return Array(r, g, b)\r\n     */\r\n    hslToRgb: function (h, s, l) {\r\n        var m1, m2, hue,\r\n            r, g, b,\r\n            rgb = [];\r\n\r\n        if (s === 0) {\r\n            r = g = b = l * 255 + 0.5 | 0;\r\n            rgb = [r, g, b];\r\n        }\r\n        else {\r\n            if (l <= 0.5) {\r\n                m2 = l * (s + 1);\r\n            }\r\n            else {\r\n                m2 = l + s - l * s;\r\n            }\r\n\r\n            m1 = l * 2 - m2;\r\n            hue = h + 1 / 3;\r\n\r\n            var tmp;\r\n            for (var i = 0; i < 3; i += 1) {\r\n                if (hue < 0) {\r\n                    hue += 1;\r\n                }\r\n                else if (hue > 1) {\r\n                    hue -= 1;\r\n                }\r\n\r\n                if (6 * hue < 1) {\r\n                    tmp = m1 + (m2 - m1) * hue * 6;\r\n                }\r\n                else if (2 * hue < 1) {\r\n                    tmp = m2;\r\n                }\r\n                else if (3 * hue < 2) {\r\n                    tmp = m1 + (m2 - m1) * (2 / 3 - hue) * 6;\r\n                }\r\n                else {\r\n                    tmp = m1;\r\n                }\r\n\r\n                rgb[i] = tmp * 255 + 0.5 | 0;\r\n\r\n                hue -= 1 / 3;\r\n            }\r\n        }\r\n\r\n        return rgb;\r\n    }\r\n};\r\n\r\n\r\n// TODO\r\nImageFilters.Translate = function (srcImageData, x, y, interpolation) {\r\n\r\n};\r\nImageFilters.Scale = function (srcImageData, scaleX, scaleY, interpolation) {\r\n\r\n};\r\nImageFilters.Rotate = function (srcImageData, originX, originY, angle, resize, interpolation) {\r\n\r\n};\r\nImageFilters.Affine = function (srcImageData, matrix, resize, interpolation) {\r\n\r\n};\r\nImageFilters.UnsharpMask = function (srcImageData, level) {\r\n\r\n};\r\n\r\nImageFilters.ConvolutionFilter = function (srcImageData, matrixX, matrixY, matrix, divisor, bias, preserveAlpha, clamp, color, alpha) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    divisor = divisor || 1;\r\n    bias = bias || 0;\r\n\r\n    // default true\r\n    (preserveAlpha !== false) && (preserveAlpha = true);\r\n    (clamp !== false) && (clamp = true);\r\n\r\n    color = color || 0;\r\n    alpha = alpha || 0;\r\n\r\n    var index = 0,\r\n        rows = matrixX >> 1,\r\n        cols = matrixY >> 1,\r\n        clampR = color >> 16 & 0xFF,\r\n        clampG = color >>  8 & 0xFF,\r\n        clampB = color       & 0xFF,\r\n        clampA = alpha * 0xFF;\r\n\r\n    for (var y = 0; y < srcHeight; y += 1) {\r\n        for (var x = 0; x < srcWidth; x += 1, index += 4) {\r\n            var r = 0,\r\n                g = 0,\r\n                b = 0,\r\n                a = 0,\r\n                replace = false,\r\n                mIndex = 0,\r\n                v;\r\n\r\n            for (var row = -rows; row <= rows; row += 1) {\r\n                var rowIndex = y + row,\r\n                    offset;\r\n\r\n                if (0 <= rowIndex && rowIndex < srcHeight) {\r\n                    offset = rowIndex * srcWidth;\r\n                }\r\n                else if (clamp) {\r\n                    offset = y * srcWidth;\r\n                }\r\n                else {\r\n                    replace = true;\r\n                }\r\n\r\n                for (var col = -cols; col <= cols; col += 1) {\r\n                    var m = matrix[mIndex++];\r\n\r\n                    if (m !== 0) {\r\n                        var colIndex = x + col;\r\n\r\n                        if (!(0 <= colIndex && colIndex < srcWidth)) {\r\n                            if (clamp) {\r\n                                colIndex = x;\r\n                            }\r\n                            else {\r\n                                replace = true;\r\n                            }\r\n                        }\r\n\r\n                        if (replace) {\r\n                            r += m * clampR;\r\n                            g += m * clampG;\r\n                            b += m * clampB;\r\n                            a += m * clampA;\r\n                        }\r\n                        else {\r\n                            var p = (offset + colIndex) << 2;\r\n                            r += m * srcPixels[p];\r\n                            g += m * srcPixels[p + 1];\r\n                            b += m * srcPixels[p + 2];\r\n                            a += m * srcPixels[p + 3];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            dstPixels[index]     = (v = r / divisor + bias) > 255 ? 255 : v < 0 ? 0 : v | 0;\r\n            dstPixels[index + 1] = (v = g / divisor + bias) > 255 ? 255 : v < 0 ? 0 : v | 0;\r\n            dstPixels[index + 2] = (v = b / divisor + bias) > 255 ? 255 : v < 0 ? 0 : v | 0;\r\n            dstPixels[index + 3] = preserveAlpha ? srcPixels[index + 3] : (v = a / divisor + bias) > 255 ? 255 : v < 0 ? 0 : v | 0;\r\n        }\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * @param threshold 0.0 <= n <= 1.0\r\n */\r\nImageFilters.Binarize = function (srcImageData, threshold) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    if (isNaN(threshold)) {\r\n        threshold = 0.5;\r\n    }\r\n\r\n    threshold *= 255;\r\n\r\n    for (var i = 0; i < srcLength; i += 4) {\r\n        var avg = srcPixels[i] + srcPixels[i + 1] + srcPixels[i + 2] / 3;\r\n\r\n        dstPixels[i] = dstPixels[i + 1] = dstPixels[i + 2] = avg <= threshold ? 0 : 255;\r\n        dstPixels[i + 3] = 255;\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.BlendAdd = function (srcImageData, blendImageData, dx, dy) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data,\r\n        blendPixels  = blendImageData.data;\r\n\r\n    var v;\r\n\r\n    for (var i = 0; i < srcLength; i += 4) {\r\n        dstPixels[i]     = ((v = srcPixels[i]     + blendPixels[i])     > 255) ? 255 : v;\r\n        dstPixels[i + 1] = ((v = srcPixels[i + 1] + blendPixels[i + 1]) > 255) ? 255 : v;\r\n        dstPixels[i + 2] = ((v = srcPixels[i + 2] + blendPixels[i + 2]) > 255) ? 255 : v;\r\n        dstPixels[i + 3] = 255;\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.BlendSubtract = function (srcImageData, blendImageData, dx, dy) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data,\r\n        blendPixels  = blendImageData.data;\r\n\r\n    var v;\r\n\r\n    for (var i = 0; i < srcLength; i += 4) {\r\n        dstPixels[i]     = ((v = srcPixels[i]     - blendPixels[i])     < 0) ? 0 : v;\r\n        dstPixels[i + 1] = ((v = srcPixels[i + 1] - blendPixels[i + 1]) < 0) ? 0 : v;\r\n        dstPixels[i + 2] = ((v = srcPixels[i + 2] - blendPixels[i + 2]) < 0) ? 0 : v;\r\n        dstPixels[i + 3] = 255;\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * Algorithm based on BoxBlurFilter.java by Huxtable.com\r\n * @see http://www.jhlabs.com/ip/blurring.html\r\n * Copyright 2005 Huxtable.com. All rights reserved.\r\n */\r\nImageFilters.BoxBlur = (function () {\r\n    var blur = function(src, dst, width, height, radius) {\r\n        var tableSize = radius * 2 + 1;\r\n        var radiusPlus1 = radius + 1;\r\n        var widthMinus1 = width - 1;\r\n\r\n        var r, g, b, a;\r\n\r\n        var srcIndex = 0;\r\n        var dstIndex;\r\n        var p, next, prev;\r\n        var i, l, x, y,\r\n            nextIndex, prevIndex;\r\n\r\n        var sumTable = [];\r\n        for (i = 0, l = 256 * tableSize; i < l; i += 1) {\r\n            sumTable[i] = i / tableSize | 0;\r\n        }\r\n\r\n        for (y = 0; y < height; y += 1) {\r\n            r = g = b = a = 0;\r\n            dstIndex = y;\r\n\r\n            p = srcIndex << 2;\r\n            r += radiusPlus1 * src[p];\r\n            g += radiusPlus1 * src[p + 1];\r\n            b += radiusPlus1 * src[p + 2];\r\n            a += radiusPlus1 * src[p + 3];\r\n\r\n            for (i = 1; i <= radius; i += 1) {\r\n                p = (srcIndex + (i < width ? i : widthMinus1)) << 2;\r\n                r += src[p];\r\n                g += src[p + 1];\r\n                b += src[p + 2];\r\n                a += src[p + 3];\r\n            }\r\n\r\n            for (x = 0; x < width; x += 1) {\r\n                p = dstIndex << 2;\r\n                dst[p]     = sumTable[r];\r\n                dst[p + 1] = sumTable[g];\r\n                dst[p + 2] = sumTable[b];\r\n                dst[p + 3] = sumTable[a];\r\n\r\n                nextIndex = x + radiusPlus1;\r\n                if (nextIndex > widthMinus1) {\r\n                    nextIndex = widthMinus1;\r\n                }\r\n\r\n                prevIndex = x - radius;\r\n                if (prevIndex < 0) {\r\n                    prevIndex = 0;\r\n                }\r\n\r\n                next = (srcIndex + nextIndex) << 2;\r\n                prev = (srcIndex + prevIndex) << 2;\r\n\r\n                r += src[next]     - src[prev];\r\n                g += src[next + 1] - src[prev + 1];\r\n                b += src[next + 2] - src[prev + 2];\r\n                a += src[next + 3] - src[prev + 3];\r\n                \r\n                dstIndex += height;\r\n            }\r\n            srcIndex += width;\r\n        }\r\n    };\r\n    \r\n    return function (srcImageData, hRadius, vRadius, quality) {\r\n        var srcPixels    = srcImageData.data,\r\n            srcWidth     = srcImageData.width,\r\n            srcHeight    = srcImageData.height,\r\n            srcLength    = srcPixels.length,\r\n            dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n            dstPixels    = dstImageData.data,\r\n            tmpImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n            tmpPixels    = tmpImageData.data;\r\n\r\n        for (var i = 0; i < quality; i += 1) {\r\n            // only use the srcPixels on the first loop\r\n            blur(i ? dstPixels : srcPixels, tmpPixels, srcWidth, srcHeight, hRadius);\r\n            blur(tmpPixels, dstPixels, srcHeight, srcWidth, vRadius);\r\n        }\r\n\r\n        return dstImageData;\r\n    };\r\n}());\r\n\r\n/**\r\n * @ param strength 1 <= n <= 4\r\n */\r\nImageFilters.GaussianBlur = function (srcImageData, strength) {\r\n    var size, matrix, divisor;\r\n\r\n    switch (strength) {\r\n    case 2:\r\n        size = 5;\r\n        matrix = [\r\n            1, 1, 2, 1, 1,\r\n            1, 2, 4, 2, 1,\r\n            2, 4, 8, 4, 2,\r\n            1, 2, 4, 2, 1,\r\n            1, 1, 2, 1, 1\r\n        ];\r\n        divisor = 52;\r\n        break;\r\n    case 3:\r\n        size = 7;\r\n        matrix = [\r\n            1, 1, 2,  2, 2, 1, 1,\r\n            1, 2, 2,  4, 2, 2, 1,\r\n            2, 2, 4,  8, 4, 2, 2,\r\n            2, 4, 8, 16, 8, 4, 2,\r\n            2, 2, 4,  8, 4, 2, 2,\r\n            1, 2, 2,  4, 2, 2, 1,\r\n            1, 1, 2,  2, 2, 1, 1\r\n        ];\r\n        divisor = 140;\r\n        break;\r\n    case 4:\r\n        size = 15;\r\n        matrix = [\r\n            2 ,2 , 3 , 4 , 5 , 5 , 6 , 6 , 6 , 5 , 5 , 4 , 3 ,2 ,2,\r\n            2 ,3 , 4 , 5 , 7 , 7 , 8 , 8 , 8 , 7 , 7 , 5 , 4 ,3 ,2,\r\n            3 ,4 , 6 , 7 , 9 ,10 ,10 ,11 ,10 ,10 , 9 , 7 , 6 ,4 ,3,\r\n            4 ,5 , 7 , 9 ,10 ,12 ,13 ,13 ,13 ,12 ,10 , 9 , 7 ,5 ,4,\r\n            5 ,7 , 9 ,11 ,13 ,14 ,15 ,16 ,15 ,14 ,13 ,11 , 9 ,7 ,5,\r\n            5 ,7 ,10 ,12 ,14 ,16 ,17 ,18 ,17 ,16 ,14 ,12 ,10 ,7 ,5,\r\n            6 ,8 ,10 ,13 ,15 ,17 ,19 ,19 ,19 ,17 ,15 ,13 ,10 ,8 ,6,\r\n            6 ,8 ,11 ,13 ,16 ,18 ,19 ,20 ,19 ,18 ,16 ,13 ,11 ,8 ,6,\r\n            6 ,8 ,10 ,13 ,15 ,17 ,19 ,19 ,19 ,17 ,15 ,13 ,10 ,8 ,6,\r\n            5 ,7 ,10 ,12 ,14 ,16 ,17 ,18 ,17 ,16 ,14 ,12 ,10 ,7 ,5,\r\n            5 ,7 , 9 ,11 ,13 ,14 ,15 ,16 ,15 ,14 ,13 ,11 , 9 ,7 ,5,\r\n            4 ,5 , 7 , 9 ,10 ,12 ,13 ,13 ,13 ,12 ,10 , 9 , 7 ,5 ,4,\r\n            3 ,4 , 6 , 7 , 9 ,10 ,10 ,11 ,10 ,10 , 9 , 7 , 6 ,4 ,3,\r\n            2 ,3 , 4 , 5 , 7 , 7 , 8 , 8 , 8 , 7 , 7 , 5 , 4 ,3 ,2,\r\n            2 ,2 , 3 , 4 , 5 , 5 , 6 , 6 , 6 , 5 , 5 , 4 , 3 ,2 ,2\r\n        ];\r\n        divisor = 2044;\r\n        break;\r\n    default:\r\n        size = 3;\r\n        matrix = [\r\n            1, 2, 1,\r\n            2, 4, 2,\r\n            1, 2, 1\r\n        ];\r\n        divisor = 16;\r\n        break;\r\n    }\r\n    return this.ConvolutionFilter(srcImageData, size, size, matrix, divisor, 0, false);\r\n};\r\n\r\n/**\r\n * Stack Blur Algorithm by Mario Klingemann <mario@quasimondo.com>\r\n * @see http://incubator.quasimondo.com/processing/fast_blur_deluxe.php\r\n */\r\n/*\r\nCopyright (c) 2010 Mario Klingemann\r\n\r\nPermission is hereby granted, free of charge, to any person\r\nobtaining a copy of this software and associated documentation\r\nfiles (the \"Software\"), to deal in the Software without\r\nrestriction, including without limitation the rights to use,\r\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the\r\nSoftware is furnished to do so, subject to the following\r\nconditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\r\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\nOTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\nImageFilters.StackBlur = (function () {\r\n    var mul_table = [\r\n        512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,\r\n        454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,\r\n        482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,\r\n        437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,\r\n        497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,\r\n        320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,\r\n        446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,\r\n        329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,\r\n        505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,\r\n        399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,\r\n        324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,\r\n        268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,\r\n        451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,\r\n        385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,\r\n        332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,\r\n        289,287,285,282,280,278,275,273,271,269,267,265,263,261,259];\r\n        \r\n   \r\n    var shg_table = [\r\n         9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, \r\n        17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, \r\n        19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20,\r\n        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21,\r\n        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\r\n        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, \r\n        22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\r\n        22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, \r\n        23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\r\n        23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\r\n        23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, \r\n        23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, \r\n        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24 ];\r\n    \r\n    function BlurStack() {\r\n        this.r = 0;\r\n        this.g = 0;\r\n        this.b = 0;\r\n        this.a = 0;\r\n        this.next = null;\r\n    }\r\n    \r\n    return function (srcImageData, radius) {\r\n        var srcPixels    = srcImageData.data,\r\n            srcWidth     = srcImageData.width,\r\n            srcHeight    = srcImageData.height,\r\n            srcLength    = srcPixels.length,\r\n            dstImageData = this.Clone(srcImageData),\r\n            dstPixels    = dstImageData.data;\r\n\r\n        var x, y, i, p, yp, yi, yw,\r\n            r_sum, g_sum, b_sum, a_sum, \r\n            r_out_sum, g_out_sum, b_out_sum, a_out_sum,\r\n            r_in_sum, g_in_sum, b_in_sum, a_in_sum, \r\n            pr, pg, pb, pa, rbs,\r\n            div = radius + radius + 1,\r\n            w4 = srcWidth << 2,\r\n            widthMinus1  = srcWidth - 1,\r\n            heightMinus1 = srcHeight - 1,\r\n            radiusPlus1  = radius + 1,\r\n            sumFactor = radiusPlus1 * ( radiusPlus1 + 1 ) / 2,\r\n            stackStart = new BlurStack(),\r\n            stack = stackStart,\r\n            stackIn, stackOut, stackEnd,\r\n            mul_sum = mul_table[radius],\r\n            shg_sum = shg_table[radius];\r\n        \r\n        for (i = 1; i < div; i += 1) {\r\n            stack = stack.next = new BlurStack();\r\n            if (i == radiusPlus1) {\r\n                stackEnd = stack;\r\n            }\r\n        }\r\n        \r\n        stack.next = stackStart;\r\n        yw = yi = 0;\r\n        \r\n        for (y = 0; y < srcHeight; y += 1) {\r\n            r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\r\n            \r\n            r_out_sum = radiusPlus1 * (pr = dstPixels[yi]);\r\n            g_out_sum = radiusPlus1 * (pg = dstPixels[yi + 1]);\r\n            b_out_sum = radiusPlus1 * (pb = dstPixels[yi + 2]);\r\n            a_out_sum = radiusPlus1 * (pa = dstPixels[yi + 3]);\r\n            \r\n            r_sum += sumFactor * pr;\r\n            g_sum += sumFactor * pg;\r\n            b_sum += sumFactor * pb;\r\n            a_sum += sumFactor * pa;\r\n            \r\n            stack = stackStart;\r\n            \r\n            for (i = 0; i < radiusPlus1; i += 1) {\r\n                stack.r = pr;\r\n                stack.g = pg;\r\n                stack.b = pb;\r\n                stack.a = pa;\r\n                stack = stack.next;\r\n            }\r\n            \r\n            for (i = 1; i < radiusPlus1; i += 1) {\r\n                p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\r\n                r_sum += (stack.r = (pr = dstPixels[p])) * (rbs = radiusPlus1 - i);\r\n                g_sum += (stack.g = (pg = dstPixels[p + 1])) * rbs;\r\n                b_sum += (stack.b = (pb = dstPixels[p + 2])) * rbs;\r\n                a_sum += (stack.a = (pa = dstPixels[p + 3])) * rbs;\r\n                \r\n                r_in_sum += pr;\r\n                g_in_sum += pg;\r\n                b_in_sum += pb;\r\n                a_in_sum += pa;\r\n                \r\n                stack = stack.next;\r\n            }\r\n            \r\n            stackIn = stackStart;\r\n            stackOut = stackEnd;\r\n            \r\n            for (x = 0; x < srcWidth; x += 1) {\r\n                dstPixels[yi]     = (r_sum * mul_sum) >> shg_sum;\r\n                dstPixels[yi + 1] = (g_sum * mul_sum) >> shg_sum;\r\n                dstPixels[yi + 2] = (b_sum * mul_sum) >> shg_sum;\r\n                dstPixels[yi + 3] = (a_sum * mul_sum) >> shg_sum;\r\n                \r\n                r_sum -= r_out_sum;\r\n                g_sum -= g_out_sum;\r\n                b_sum -= b_out_sum;\r\n                a_sum -= a_out_sum;\r\n                \r\n                r_out_sum -= stackIn.r;\r\n                g_out_sum -= stackIn.g;\r\n                b_out_sum -= stackIn.b;\r\n                a_out_sum -= stackIn.a;\r\n                \r\n                p =  (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\r\n                \r\n                r_in_sum += (stackIn.r = dstPixels[p]);\r\n                g_in_sum += (stackIn.g = dstPixels[p + 1]);\r\n                b_in_sum += (stackIn.b = dstPixels[p + 2]);\r\n                a_in_sum += (stackIn.a = dstPixels[p + 3]);\r\n                \r\n                r_sum += r_in_sum;\r\n                g_sum += g_in_sum;\r\n                b_sum += b_in_sum;\r\n                a_sum += a_in_sum;\r\n                \r\n                stackIn = stackIn.next;\r\n                \r\n                r_out_sum += (pr = stackOut.r);\r\n                g_out_sum += (pg = stackOut.g);\r\n                b_out_sum += (pb = stackOut.b);\r\n                a_out_sum += (pa = stackOut.a);\r\n                \r\n                r_in_sum -= pr;\r\n                g_in_sum -= pg;\r\n                b_in_sum -= pb;\r\n                a_in_sum -= pa;\r\n                \r\n                stackOut = stackOut.next;\r\n\r\n                yi += 4;\r\n            }\r\n            \r\n            yw += srcWidth;\r\n        }\r\n        \r\n        for (x = 0; x < srcWidth; x += 1) {\r\n            g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\r\n            \r\n            yi = x << 2;\r\n            r_out_sum = radiusPlus1 * (pr = dstPixels[yi]);\r\n            g_out_sum = radiusPlus1 * (pg = dstPixels[yi + 1]);\r\n            b_out_sum = radiusPlus1 * (pb = dstPixels[yi + 2]);\r\n            a_out_sum = radiusPlus1 * (pa = dstPixels[yi + 3]);\r\n            \r\n            r_sum += sumFactor * pr;\r\n            g_sum += sumFactor * pg;\r\n            b_sum += sumFactor * pb;\r\n            a_sum += sumFactor * pa;\r\n            \r\n            stack = stackStart;\r\n            \r\n            for (i = 0; i < radiusPlus1; i += 1) {\r\n                stack.r = pr;\r\n                stack.g = pg;\r\n                stack.b = pb;\r\n                stack.a = pa;\r\n                stack = stack.next;\r\n            }\r\n            \r\n            yp = srcWidth;\r\n            \r\n            for (i = 1; i <= radius; i += 1) {\r\n                yi = (yp + x) << 2;\r\n                \r\n                r_sum += (stack.r = (pr = dstPixels[yi])) * (rbs = radiusPlus1 - i);\r\n                g_sum += (stack.g = (pg = dstPixels[yi + 1])) * rbs;\r\n                b_sum += (stack.b = (pb = dstPixels[yi + 2])) * rbs;\r\n                a_sum += (stack.a = (pa = dstPixels[yi + 3])) * rbs;\r\n               \r\n                r_in_sum += pr;\r\n                g_in_sum += pg;\r\n                b_in_sum += pb;\r\n                a_in_sum += pa;\r\n                \r\n                stack = stack.next;\r\n            \r\n                if (i < heightMinus1) {\r\n                    yp += srcWidth;\r\n                }\r\n            }\r\n            \r\n            yi = x;\r\n            stackIn = stackStart;\r\n            stackOut = stackEnd;\r\n            \r\n            for (y = 0; y < srcHeight; y += 1) {\r\n                p = yi << 2;\r\n                dstPixels[p]     = (r_sum * mul_sum) >> shg_sum;\r\n                dstPixels[p + 1] = (g_sum * mul_sum) >> shg_sum;\r\n                dstPixels[p + 2] = (b_sum * mul_sum) >> shg_sum;\r\n                dstPixels[p + 3] = (a_sum * mul_sum) >> shg_sum;\r\n                \r\n                r_sum -= r_out_sum;\r\n                g_sum -= g_out_sum;\r\n                b_sum -= b_out_sum;\r\n                a_sum -= a_out_sum;\r\n               \r\n                r_out_sum -= stackIn.r;\r\n                g_out_sum -= stackIn.g;\r\n                b_out_sum -= stackIn.b;\r\n                a_out_sum -= stackIn.a;\r\n                \r\n                p = (x + (((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * srcWidth)) << 2;\r\n                \r\n                r_sum += (r_in_sum += (stackIn.r = dstPixels[p]));\r\n                g_sum += (g_in_sum += (stackIn.g = dstPixels[p + 1]));\r\n                b_sum += (b_in_sum += (stackIn.b = dstPixels[p + 2]));\r\n                a_sum += (a_in_sum += (stackIn.a = dstPixels[p + 3]));\r\n               \r\n                stackIn = stackIn.next;\r\n                \r\n                r_out_sum += (pr = stackOut.r);\r\n                g_out_sum += (pg = stackOut.g);\r\n                b_out_sum += (pb = stackOut.b);\r\n                a_out_sum += (pa = stackOut.a);\r\n                \r\n                r_in_sum -= pr;\r\n                g_in_sum -= pg;\r\n                b_in_sum -= pb;\r\n                a_in_sum -= pa;\r\n                \r\n                stackOut = stackOut.next;\r\n                \r\n                yi += srcWidth;\r\n            }\r\n        }\r\n        \r\n        return dstImageData;\r\n    }\r\n}());\r\n\r\n/**\r\n * TV based algorithm\r\n */\r\nImageFilters.Brightness = function (srcImageData, brightness) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    this.utils.mapRGB(srcPixels, dstPixels, function (value) {\r\n        value += brightness;\r\n        return (value > 255) ? 255 : value;\r\n    });\r\n\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * GIMP algorithm modified. pretty close to fireworks\r\n * @param brightness -100 <= n <= 100\r\n * @param contrast -100 <= n <= 100\r\n */\r\nImageFilters.BrightnessContrastGimp = function (srcImageData, brightness, contrast) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data,\r\n        p4           = Math.PI / 4;\r\n\r\n    // fix to -1 <= n <= 1\r\n    brightness /= 100;\r\n    \r\n    // fix to -99 <= n <= 99\r\n    contrast *= 0.99;\r\n    // fix to -1 < n < 1\r\n    contrast /= 100;\r\n    // apply GIMP formula\r\n    contrast = Math.tan((contrast + 1) * p4);\r\n\r\n    // get the average color\r\n    for (var avg = 0, i = 0; i < srcLength; i += 4) {\r\n        avg += (srcPixels[i] * 19595 + srcPixels[i + 1] * 38470 + srcPixels[i + 2] * 7471) >> 16;\r\n    }\r\n    avg = avg / (srcLength / 4);\r\n\r\n    this.utils.mapRGB(srcPixels, dstPixels, function (value) {\r\n        if (brightness < 0) {\r\n            value = value * (1 + brightness);\r\n        }\r\n        else if (brightness > 0) {\r\n            value = value + ((255 - value) * brightness);\r\n        }\r\n        //value += brightness;\r\n\r\n        if (contrast !== 0) {\r\n            value = (value - avg) * contrast + avg;\r\n        }\r\n        return value + 0.5 | 0;\r\n    });\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * more like the new photoshop algorithm\r\n * @param brightness -100 <= n <= 100\r\n * @param contrast -100 <= n <= 100\r\n */\r\nImageFilters.BrightnessContrastPhotoshop = function (srcImageData, brightness, contrast) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    // fix to 0 <= n <= 2;\r\n    brightness = (brightness + 100) / 100;\r\n    contrast = (contrast + 100) / 100;\r\n\r\n    this.utils.mapRGB(srcPixels, dstPixels, function (value) {\r\n        value *= brightness;\r\n        value = (value - 127.5) * contrast + 127.5;\r\n        return value + 0.5 | 0;\r\n    });\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.Channels = function (srcImageData, channel) {\r\n    var matrix;\r\n\r\n    switch (channel) {\r\n        case 2: // green\r\n            matrix = [\r\n                0, 1, 0, 0, 0,\r\n                0, 1, 0, 0, 0,\r\n                0, 1, 0, 0, 0,\r\n                0, 0, 0, 1, 0\r\n            ];\r\n            break;\r\n        case 3: // blue\r\n            matrix = [\r\n                0, 0, 1, 0, 0,\r\n                0, 0, 1, 0, 0,\r\n                0, 0, 1, 0, 0,\r\n                0, 0, 0, 1, 0\r\n            ];\r\n            break;\r\n        default: // red\r\n            matrix = [\r\n                1, 0, 0, 0, 0,\r\n                1, 0, 0, 0, 0,\r\n                1, 0, 0, 0, 0,\r\n                0, 0, 0, 1, 0\r\n            ];\r\n            break;\r\n\r\n    }\r\n\r\n    return this.ColorMatrixFilter(srcImageData, matrix);\r\n};\r\n\r\nImageFilters.Clone = function (srcImageData) {\r\n    return this.Copy(srcImageData, this.utils.createImageData(srcImageData.width, srcImageData.height));\r\n};\r\n\r\n/**\r\n * slower\r\n */\r\nImageFilters.CloneBuiltin = function (srcImageData) {\r\n    var srcWidth  = srcImageData.width,\r\n        srcHeight = srcImageData.height,\r\n        canvas    = this.utils.getSampleCanvas(),\r\n        context   = this.utils.getSampleContext(),\r\n        dstImageData;\r\n\r\n    canvas.width  = srcWidth;\r\n    canvas.height = srcHeight;\r\n\r\n    context.putImageData(srcImageData, 0, 0);\r\n    dstImageData = context.getImageData(0, 0, srcWidth, srcHeight);\r\n\r\n    canvas.width = 0;\r\n    canvas.height = 0;\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.ColorMatrixFilter = function (srcImageData, matrix) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    var m0  = matrix[0],\r\n        m1  = matrix[1],\r\n        m2  = matrix[2],\r\n        m3  = matrix[3],\r\n        m4  = matrix[4],\r\n        m5  = matrix[5],\r\n        m6  = matrix[6],\r\n        m7  = matrix[7],\r\n        m8  = matrix[8],\r\n        m9  = matrix[9],\r\n        m10 = matrix[10],\r\n        m11 = matrix[11],\r\n        m12 = matrix[12],\r\n        m13 = matrix[13],\r\n        m14 = matrix[14],\r\n        m15 = matrix[15],\r\n        m16 = matrix[16],\r\n        m17 = matrix[17],\r\n        m18 = matrix[18],\r\n        m19 = matrix[19];\r\n\r\n    var value, i, r, g, b, a;\r\n    for (i = 0; i < srcLength; i += 4) {\r\n        r = srcPixels[i];\r\n        g = srcPixels[i + 1];\r\n        b = srcPixels[i + 2];\r\n        a = srcPixels[i + 3];\r\n\r\n        dstPixels[i]     = (value = r *  m0 + g *  m1 + b *  m2 + a *  m3 +  m4) > 255 ? 255 : value < 0 ? 0 : value | 0;\r\n        dstPixels[i + 1] = (value = r *  m5 + g *  m6 + b *  m7 + a *  m8 +  m9) > 255 ? 255 : value < 0 ? 0 : value | 0;\r\n        dstPixels[i + 2] = (value = r * m10 + g * m11 + b * m12 + a * m13 + m14) > 255 ? 255 : value < 0 ? 0 : value | 0;\r\n        dstPixels[i + 3] = (value = r * m15 + g * m16 + b * m17 + a * m18 + m19) > 255 ? 255 : value < 0 ? 0 : value | 0;\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.ColorTransformFilter = function (\r\n        srcImageData, redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier,\r\n        redOffset, greenOffset, blueOffset, alphaOffset) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    var i, v;\r\n    for (i = 0; i < srcLength; i += 4) {\r\n        dstPixels[i]     = (v = srcPixels[i]     * redMultiplier   + redOffset)   > 255 ? 255 : v < 0 ? 0 : v;\r\n        dstPixels[i + 1] = (v = srcPixels[i + 1] * greenMultiplier + greenOffset) > 255 ? 255 : v < 0 ? 0 : v;\r\n        dstPixels[i + 2] = (v = srcPixels[i + 2] * blueMultiplier  + blueOffset)  > 255 ? 255 : v < 0 ? 0 : v;\r\n        dstPixels[i + 3] = (v = srcPixels[i + 3] * alphaMultiplier + alphaOffset) > 255 ? 255 : v < 0 ? 0 : v;\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.Copy = function (srcImageData, dstImageData) {\r\n    var srcPixels = srcImageData.data,\r\n        srcLength = srcPixels.length,\r\n        dstPixels = dstImageData.data;\r\n\r\n    while (srcLength--) {\r\n        dstPixels[srcLength] = srcPixels[srcLength];\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.Crop = function (srcImageData, x, y, width, height) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(width, height),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    var srcLeft   = Math.max(x, 0),\r\n        srcTop    = Math.max(y, 0),\r\n        srcRight  = Math.min(x + width, srcWidth),\r\n        srcBottom = Math.min(y + height, srcHeight),\r\n        dstLeft   = srcLeft - x,\r\n        dstTop    = srcTop - y,\r\n        srcRow, srcCol, srcIndex, dstIndex;\r\n\r\n    for (srcRow = srcTop, dstRow = dstTop; srcRow < srcBottom; srcRow += 1, dstRow += 1) {\r\n        for (srcCol = srcLeft, dstCol = dstLeft; srcCol < srcRight; srcCol += 1, dstCol += 1) {\r\n            srcIndex = (srcRow * srcWidth + srcCol) << 2;\r\n            dstIndex = (dstRow * width    + dstCol) << 2;\r\n            dstPixels[dstIndex]     = srcPixels[srcIndex];\r\n            dstPixels[dstIndex + 1] = srcPixels[srcIndex + 1];\r\n            dstPixels[dstIndex + 2] = srcPixels[srcIndex + 2];\r\n            dstPixels[dstIndex + 3] = srcPixels[srcIndex + 3];\r\n        }\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.CropBuiltin = function (srcImageData, x, y, width, height) {\r\n    var srcWidth  = srcImageData.width,\r\n        srcHeight = srcImageData.height,\r\n        canvas    = this.utils.getSampleCanvas(),\r\n        context   = this.utils.getSampleContext();\r\n\r\n    canvas.width = srcWidth;\r\n    canvas.height = srcHeight;\r\n    context.putImageData(srcImageData, 0, 0);\r\n    var result = context.getImageData(x, y, width, height);\r\n\r\n    canvas.width = 0;\r\n    canvas.height = 0;\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * sets to the average of the highest and lowest contrast\r\n */\r\nImageFilters.Desaturate = function (srcImageData) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    for (var i = 0; i < srcLength; i += 4) {\r\n        var r = srcPixels[i],\r\n            g = srcPixels[i + 1],\r\n            b = srcPixels[i + 2],\r\n            max = (r > g) ? (r > b) ? r : b : (g > b) ? g : b,\r\n            min = (r < g) ? (r < b) ? r : b : (g < b) ? g : b,\r\n            avg = ((max + min) / 2) + 0.5 | 0;\r\n\r\n        dstPixels[i] = dstPixels[i + 1] = dstPixels[i + 2] = avg;\r\n        dstPixels[i + 3] = srcPixels[i + 3];\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * TODO: use bilinear\r\n */\r\nImageFilters.DisplacementMapFilter = function (srcImageData, mapImageData, mapX, mapY, componentX, componentY, scaleX, scaleY, mode) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n//        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstImageData = ImageFilters.Clone(srcImageData),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    mapX || (mapX = 0);\r\n    mapY || (mapY = 0);\r\n    componentX || (componentX = 0); // red?\r\n    componentY || (componentY = 0);\r\n    scaleX || (scaleX = 0);\r\n    scaleY || (scaleY = 0);\r\n    mode || (mode = 2); // wrap\r\n\r\n    var mapWidth  = mapImageData.width,\r\n        mapHeight = mapImageData.height,\r\n        mapPixels = mapImageData.data,\r\n        mapRight  = mapWidth + mapX,\r\n        mapBottom = mapHeight + mapY,\r\n        dstIndex, srcIndex, mapIndex,\r\n        cx, cy, tx, ty, x, y;\r\n\r\n    for (x = 0; x < srcWidth; x += 1) {\r\n        for (y = 0; y < srcHeight; y += 1) {\r\n\r\n            dstIndex = (y * srcWidth + x) << 2;\r\n\r\n            if (x < mapX || y < mapY || x >= mapRight || y >= mapBottom) {\r\n                // out of the map bounds\r\n                // copy src to dst\r\n                srcIndex = dstIndex;\r\n            } else {\r\n                // apply map\r\n                mapIndex = ((y - mapY) * mapWidth + (x - mapX)) << 2;\r\n\r\n                // tx = x + ((componentX(x, y) - 128) * scaleX) / 256\r\n                cx = mapPixels[mapIndex + componentX];\r\n                tx = x + (((cx - 128) * scaleX) >> 8);\r\n\r\n                // tx = y + ((componentY(x, y) - 128) * scaleY) / 256\r\n                cy = mapPixels[mapIndex + componentY];\r\n                ty = y + (((cy - 128) * scaleY) >> 8);\r\n\r\n                srcIndex = ImageFilters.utils.getPixelIndex(tx + 0.5 | 0, ty + 0.5 | 0, srcWidth, srcHeight, mode);\r\n                if (srcIndex === null) {\r\n                    // if mode == ignore and (tx,ty) is out of src bounds\r\n                    // then copy (x,y) to dst\r\n                    srcIndex = dstIndex;\r\n                }\r\n            }\r\n\r\n            dstPixels[dstIndex]     = srcPixels[srcIndex];\r\n            dstPixels[dstIndex + 1] = srcPixels[srcIndex + 1];\r\n            dstPixels[dstIndex + 2] = srcPixels[srcIndex + 2];\r\n            dstPixels[dstIndex + 3] = srcPixels[srcIndex + 3];\r\n        }\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * Floyd-Steinberg algorithm\r\n * @param levels 2 <= n <= 255\r\n */\r\nImageFilters.Dither = function (srcImageData, levels) {\r\n    var srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        dstImageData = this.Clone(srcImageData),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    levels = levels < 2 ? 2 : levels > 255 ? 255 : levels;\r\n\r\n    // Build a color map using the same algorithm as the posterize filter.\r\n    var posterize,\r\n        levelMap = [],\r\n        levelsMinus1 = levels - 1,\r\n        j = 0,\r\n        k = 0,\r\n        i;\r\n\r\n    for (i = 0; i < levels; i += 1) {\r\n        levelMap[i] = (255 * i) / levelsMinus1;\r\n    }\r\n\r\n    posterize = this.utils.buildMap(function (value) {\r\n        var ret = levelMap[j];\r\n\r\n        k += levels;\r\n\r\n        if (k > 255) {\r\n            k -= 255;\r\n            j += 1;\r\n        }\r\n\r\n        return ret;\r\n    });\r\n    \r\n    // Apply the dithering algorithm to each pixel\r\n    var x, y,\r\n        index,\r\n        old_r, old_g, old_b,\r\n        new_r, new_g, new_b,\r\n        err_r, err_g, err_b,\r\n        nbr_r, nbr_g, nbr_b,\r\n        srcWidthMinus1 = srcWidth - 1,\r\n        srcHeightMinus1 = srcHeight - 1,\r\n        A = 7 / 16,\r\n        B = 3 / 16,\r\n        C = 5 / 16,\r\n        D = 1 / 16;\r\n    \r\n    for (y = 0; y < srcHeight; y += 1) {\r\n        for (x = 0; x < srcWidth; x += 1) {\r\n            // Get the current pixel.\r\n            index = (y * srcWidth + x) << 2;\r\n            \r\n            old_r = dstPixels[index];\r\n            old_g = dstPixels[index + 1];\r\n            old_b = dstPixels[index + 2];\r\n            \r\n            // Quantize using the color map\r\n            new_r = posterize[old_r];\r\n            new_g = posterize[old_g];\r\n            new_b = posterize[old_b];\r\n            \r\n            // Set the current pixel.\r\n            dstPixels[index]     = new_r;\r\n            dstPixels[index + 1] = new_g;\r\n            dstPixels[index + 2] = new_b;\r\n            \r\n            // Quantization errors\r\n            err_r = old_r - new_r;\r\n            err_g = old_g - new_g;\r\n            err_b = old_b - new_b;\r\n            \r\n            // Apply the matrix.\r\n            // x + 1, y\r\n            index += 1 << 2;\r\n            if (x < srcWidthMinus1) {\r\n                nbr_r = dstPixels[index]     + A * err_r;\r\n                nbr_g = dstPixels[index + 1] + A * err_g;\r\n                nbr_b = dstPixels[index + 2] + A * err_b;\r\n                \r\n                dstPixels[index]     = nbr_r > 255 ? 255 : nbr_r < 0 ? 0 : nbr_r | 0;\r\n                dstPixels[index + 1] = nbr_g > 255 ? 255 : nbr_g < 0 ? 0 : nbr_g | 0;\r\n                dstPixels[index + 2] = nbr_b > 255 ? 255 : nbr_b < 0 ? 0 : nbr_b | 0;\r\n            }\r\n            \r\n            // x - 1, y + 1\r\n            index += (srcWidth - 2) << 2;\r\n            if (x > 0 && y < srcHeightMinus1) {\r\n                nbr_r = dstPixels[index]     + B * err_r;\r\n                nbr_g = dstPixels[index + 1] + B * err_g;\r\n                nbr_b = dstPixels[index + 2] + B * err_b;\r\n                \r\n                dstPixels[index]     = nbr_r > 255 ? 255 : nbr_r < 0 ? 0 : nbr_r | 0;\r\n                dstPixels[index + 1] = nbr_g > 255 ? 255 : nbr_g < 0 ? 0 : nbr_g | 0;\r\n                dstPixels[index + 2] = nbr_b > 255 ? 255 : nbr_b < 0 ? 0 : nbr_b | 0;\r\n            }\r\n            \r\n            // x, y + 1\r\n            index += 1 << 2;\r\n            if (y < srcHeightMinus1) {\r\n                nbr_r = dstPixels[index]     + C * err_r;\r\n                nbr_g = dstPixels[index + 1] + C * err_g;\r\n                nbr_b = dstPixels[index + 2] + C * err_b;\r\n                \r\n                dstPixels[index]     = nbr_r > 255 ? 255 : nbr_r < 0 ? 0 : nbr_r | 0;\r\n                dstPixels[index + 1] = nbr_g > 255 ? 255 : nbr_g < 0 ? 0 : nbr_g | 0;\r\n                dstPixels[index + 2] = nbr_b > 255 ? 255 : nbr_b < 0 ? 0 : nbr_b | 0;\r\n            }\r\n            \r\n            // x + 1, y + 1\r\n            index += 1 << 2;\r\n            if (x < srcWidthMinus1 && y < srcHeightMinus1) {\r\n                nbr_r = dstPixels[index]     + D * err_r;\r\n                nbr_g = dstPixels[index + 1] + D * err_g;\r\n                nbr_b = dstPixels[index + 2] + D * err_b;\r\n                \r\n                dstPixels[index]     = nbr_r > 255 ? 255 : nbr_r < 0 ? 0 : nbr_r | 0;\r\n                dstPixels[index + 1] = nbr_g > 255 ? 255 : nbr_g < 0 ? 0 : nbr_g | 0;\r\n                dstPixels[index + 2] = nbr_b > 255 ? 255 : nbr_b < 0 ? 0 : nbr_b | 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.Edge = function (srcImageData) {\r\n    //pretty close to Fireworks 'Find Edges' effect\r\n    return this.ConvolutionFilter(srcImageData, 3, 3, [\r\n        -1, -1, -1,\r\n        -1,  8, -1,\r\n        -1, -1, -1\r\n    ]);\r\n};\r\n\r\nImageFilters.Emboss = function (srcImageData) {\r\n    return this.ConvolutionFilter(srcImageData, 3, 3, [\r\n        -2, -1, 0,\r\n        -1,  1, 1,\r\n         0,  1, 2\r\n    ]);\r\n};\r\n\r\nImageFilters.Enrich = function (srcImageData) {\r\n    return this.ConvolutionFilter(srcImageData, 3, 3, [\r\n         0, -2,  0,\r\n        -2, 20, -2,\r\n         0, -2,  0\r\n    ], 10, -40);\r\n};\r\n\r\nImageFilters.Flip = function (srcImageData, vertical) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    var x, y, srcIndex, dstIndex, i;\r\n\r\n    for (y = 0; y < srcHeight; y += 1) {\r\n        for (x = 0; x < srcWidth; x += 1) {\r\n            srcIndex = (y * srcWidth + x) << 2;\r\n            if (vertical) {\r\n                dstIndex = ((srcHeight - y - 1) * srcWidth + x) << 2;\r\n            }\r\n            else {\r\n                dstIndex = (y * srcWidth + (srcWidth - x - 1)) << 2;\r\n            }\r\n\r\n            dstPixels[dstIndex]     = srcPixels[srcIndex];\r\n            dstPixels[dstIndex + 1] = srcPixels[srcIndex + 1];\r\n            dstPixels[dstIndex + 2] = srcPixels[srcIndex + 2];\r\n            dstPixels[dstIndex + 3] = srcPixels[srcIndex + 3];\r\n        }\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.Gamma = function (srcImageData, gamma) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    this.utils.mapRGB(srcPixels, dstPixels, function (value) {\r\n        value = (255 * Math.pow(value / 255, 1 / gamma) + 0.5);\r\n        return value > 255 ? 255 : value + 0.5 | 0;\r\n    });\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.GrayScale = function (srcImageData) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    for (var i = 0; i < srcLength; i += 4) {\r\n        var intensity = (srcPixels[i] * 19595 + srcPixels[i + 1] * 38470 + srcPixels[i + 2] * 7471) >> 16;\r\n        //var intensity = (srcPixels[i] * 0.3086 + srcPixels[i + 1] * 0.6094 + srcPixels[i + 2] * 0.0820) | 0;\r\n        dstPixels[i] = dstPixels[i + 1] = dstPixels[i + 2] = intensity;\r\n        dstPixels[i + 3] = srcPixels[i + 3];\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * @param hueDelta  -180 <= n <= 180\r\n * @param satDelta  -100 <= n <= 100\r\n * @param lightness -100 <= n <= 100\r\n */\r\nImageFilters.HSLAdjustment = function (srcImageData, hueDelta, satDelta, lightness) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    hueDelta /= 360;\r\n    satDelta /= 100;\r\n    lightness /= 100;\r\n\r\n    var rgbToHsl = this.utils.rgbToHsl;\r\n    var hslToRgb = this.utils.hslToRgb;\r\n    var h, s, l, hsl, rgb, i;\r\n\r\n    for (i = 0; i < srcLength; i += 4) {\r\n        // convert to HSL\r\n        hsl = rgbToHsl(srcPixels[i], srcPixels[i + 1], srcPixels[i + 2]);\r\n\r\n        // hue\r\n        h = hsl[0] + hueDelta;\r\n        while (h < 0) {\r\n            h += 1;\r\n        }\r\n        while (h > 1) {\r\n            h -= 1;\r\n        }\r\n\r\n        // saturation\r\n        s = hsl[1] + hsl[1] * satDelta;\r\n        if (s < 0) {\r\n            s = 0;\r\n        }\r\n        else if (s > 1) {\r\n            s = 1;\r\n        }\r\n\r\n        // lightness\r\n        l = hsl[2];\r\n        if (lightness > 0) {\r\n            l += (1 - l) * lightness;\r\n        }\r\n        else if (lightness < 0) {\r\n            l += l * lightness;\r\n        }\r\n\r\n        // convert back to rgb\r\n        rgb = hslToRgb(h, s, l);\r\n\r\n        dstPixels[i]     = rgb[0];\r\n        dstPixels[i + 1] = rgb[1];\r\n        dstPixels[i + 2] = rgb[2];\r\n        dstPixels[i + 3] = srcPixels[i + 3];\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.Invert = function (srcImageData) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    this.utils.mapRGB(srcPixels, dstPixels, function (value) {\r\n        return 255 - value;\r\n    });\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.Mosaic = function (srcImageData, blockSize) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n    \r\n    var cols = Math.ceil(srcWidth / blockSize),\r\n        rows = Math.ceil(srcHeight / blockSize),\r\n        row, col,\r\n        x_start, x_end, y_start, y_end,\r\n        x, y, yIndex, index, size,\r\n        r, g, b, a;\r\n\r\n    for (row = 0; row < rows; row += 1) {\r\n        y_start = row * blockSize;\r\n        y_end   = y_start + blockSize;\r\n        \r\n        if (y_end > srcHeight) {\r\n            y_end = srcHeight;\r\n        }\r\n        \r\n        for (col = 0; col < cols; col += 1) {\r\n            x_start = col * blockSize;\r\n            x_end   = x_start + blockSize;\r\n            \r\n            if (x_end > srcWidth) {\r\n                x_end = srcWidth;\r\n            }\r\n\r\n            // get the average color from the src\r\n            r = g = b = a = 0;\r\n            size = (x_end - x_start) * (y_end - y_start);\r\n\r\n            for (y = y_start; y < y_end; y += 1) {\r\n                yIndex = y * srcWidth;\r\n                \r\n                for (x = x_start; x < x_end; x += 1) {\r\n                    index = (yIndex + x) << 2;\r\n                    r += srcPixels[index];\r\n                    g += srcPixels[index + 1];\r\n                    b += srcPixels[index + 2];\r\n                    a += srcPixels[index + 3];\r\n                }\r\n            }\r\n\r\n            r = (r / size) + 0.5 | 0;\r\n            g = (g / size) + 0.5 | 0;\r\n            b = (b / size) + 0.5 | 0;\r\n            a = (a / size) + 0.5 | 0;\r\n\r\n            // fill the dst with that color\r\n            for (y = y_start; y < y_end; y += 1) {\r\n                yIndex = y * srcWidth;\r\n                \r\n                for (x = x_start; x < x_end; x += 1) {\r\n                    index = (yIndex + x) << 2;\r\n                    dstPixels[index]     = r;\r\n                    dstPixels[index + 1] = g;\r\n                    dstPixels[index + 2] = b;\r\n                    dstPixels[index + 3] = a;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * @param range  1 <= n <= 5\r\n * @param levels 1 <= n <= 256\r\n */\r\nImageFilters.Oil = function (srcImageData, range, levels) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n    \r\n    var index = 0,\r\n        rh = [],\r\n        gh = [],\r\n        bh = [],\r\n        rt = [],\r\n        gt = [],\r\n        bt = [],\r\n        x, y, i, row, col,\r\n        rowIndex, colIndex, offset, srcIndex,\r\n        sr, sg, sb, ri, gi, bi,\r\n        r, g, b;\r\n    \r\n    for (y = 0; y < srcHeight; y += 1) {\r\n        for (x = 0; x < srcWidth; x += 1) {\r\n            for (i = 0; i < levels; i += 1) {\r\n                rh[i] = gh[i] = bh[i] = rt[i] = gt[i] = bt[i] = 0;\r\n            }\r\n            \r\n            for (row = -range; row <= range; row += 1) {\r\n                rowIndex = y + row;\r\n                \r\n                if (rowIndex < 0 || rowIndex >= srcHeight) {\r\n                    continue;\r\n                }\r\n                \r\n                offset = rowIndex * srcWidth;\r\n                \r\n                for (col = -range; col <= range; col += 1) {\r\n                    colIndex = x + col;\r\n                    if (colIndex < 0 || colIndex >= srcWidth) {\r\n                        continue;\r\n                    }\r\n                    \r\n                    srcIndex = (offset + colIndex) << 2;\r\n                    sr = srcPixels[srcIndex];\r\n                    sg = srcPixels[srcIndex + 1];\r\n                    sb = srcPixels[srcIndex + 2];\r\n                    ri = (sr * levels) >> 8;\r\n                    gi = (sg * levels) >> 8;\r\n                    bi = (sb * levels) >> 8;\r\n                    rt[ri] += sr;\r\n                    gt[gi] += sg;\r\n                    bt[bi] += sb;\r\n                    rh[ri] += 1;\r\n                    gh[gi] += 1;\r\n                    bh[bi] += 1;\r\n                }\r\n            }\r\n\r\n            r = g = b = 0;\r\n            for (i = 1; i < levels; i += 1) {\r\n                if(rh[i] > rh[r]) {\r\n                    r = i;\r\n                }\r\n                if(gh[i] > gh[g]) {\r\n                    g = i;\r\n                }\r\n                if(bh[i] > bh[b]) {\r\n                    b = i;\r\n                }\r\n            }\r\n\r\n            dstPixels[index]     = rt[r] / rh[r] | 0;\r\n            dstPixels[index + 1] = gt[g] / gh[g] | 0;\r\n            dstPixels[index + 2] = bt[b] / bh[b] | 0;\r\n            dstPixels[index + 3] = srcPixels[index + 3];\r\n            index += 4;\r\n        }\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.OpacityFilter = function (srcImageData, opacity) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    for (var i = 0; i < srcLength; i += 4) {\r\n        dstPixels[i]     = srcPixels[i];\r\n        dstPixels[i + 1] = srcPixels[i + 1];\r\n        dstPixels[i + 2] = srcPixels[i + 2];\r\n        dstPixels[i + 3] = opacity;\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * @param levels 2 <= n <= 255\r\n */\r\nImageFilters.Posterize = function (srcImageData, levels) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    levels = levels < 2 ? 2 : levels > 255 ? 255 : levels;\r\n\r\n    var levelMap = [],\r\n        levelsMinus1 = levels - 1,\r\n        j = 0,\r\n        k = 0,\r\n        i;\r\n\r\n    for (i = 0; i < levels; i += 1) {\r\n        levelMap[i] = (255 * i) / levelsMinus1;\r\n    }\r\n\r\n    this.utils.mapRGB(srcPixels, dstPixels, function (value) {\r\n        var ret = levelMap[j];\r\n\r\n        k += levels;\r\n\r\n        if (k > 255) {\r\n            k -= 255;\r\n            j += 1;\r\n        }\r\n\r\n        return ret;\r\n    });\r\n\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * @param scale 0.0 <= n <= 5.0\r\n */\r\nImageFilters.Rescale = function (srcImageData, scale) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    this.utils.mapRGB(srcPixels, dstPixels, function (value) {\r\n        value *= scale;\r\n        return (value > 255) ? 255 : value + 0.5 | 0;\r\n    });\r\n\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * Nearest neighbor\r\n */\r\nImageFilters.ResizeNearestNeighbor = function (srcImageData, width, height) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(width, height),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    var xFactor = srcWidth / width,\r\n        yFactor = srcHeight / height,\r\n        dstIndex = 0, srcIndex,\r\n        x, y, offset;\r\n\r\n    for (y = 0; y < height; y += 1) {\r\n        offset = ((y * yFactor) | 0) * srcWidth;\r\n\r\n        for (x = 0; x < width; x += 1) {\r\n            srcIndex = (offset + x * xFactor) << 2;\r\n\r\n            dstPixels[dstIndex]     = srcPixels[srcIndex];\r\n            dstPixels[dstIndex + 1] = srcPixels[srcIndex + 1];\r\n            dstPixels[dstIndex + 2] = srcPixels[srcIndex + 2];\r\n            dstPixels[dstIndex + 3] = srcPixels[srcIndex + 3];\r\n            dstIndex += 4;\r\n        }\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * Bilinear\r\n */\r\nImageFilters.Resize = function (srcImageData, width, height) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(width, height),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    var xFactor = srcWidth / width,\r\n        yFactor = srcHeight / height,\r\n        dstIndex = 0,\r\n        x, y;\r\n\r\n    for (y = 0; y < height; y += 1) {\r\n        for (x = 0; x < width; x += 1) {\r\n            this.utils.copyBilinear(srcPixels, x * xFactor, y * yFactor, srcWidth, srcHeight, dstPixels, dstIndex, 0);\r\n            dstIndex += 4;\r\n        }\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\n\r\n/**\r\n * faster resizing using the builtin context.scale()\r\n * the resizing algorithm may be different between browsers\r\n * this might not work if the image is transparent.\r\n * to fix that we probably need two contexts\r\n */\r\nImageFilters.ResizeBuiltin = function (srcImageData, width, height) {\r\n    var srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        canvas    = this.utils.getSampleCanvas(),\r\n        context   = this.utils.getSampleContext(),\r\n        dstImageData;\r\n\r\n    canvas.width  = Math.max(srcWidth, width);\r\n    canvas.height = Math.max(srcHeight, height);\r\n    context.save();\r\n\r\n    context.putImageData(srcImageData, 0, 0);\r\n    context.scale(width / srcWidth, height / srcHeight);\r\n    context.drawImage(canvas, 0, 0);\r\n\r\n    dstImageData = context.getImageData(0, 0, width, height);\r\n\r\n    context.restore();\r\n    canvas.width = 0;\r\n    canvas.height = 0;\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.Sepia = function (srcImageData) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    var r, g, b, i, value;\r\n\r\n    for (i = 0; i < srcLength; i += 4) {\r\n        r = srcPixels[i];\r\n        g = srcPixels[i + 1];\r\n        b = srcPixels[i + 2];\r\n\r\n        dstPixels[i]     = (value = r * 0.393 + g * 0.769 + b * 0.189) > 255 ? 255 : value < 0 ? 0 : value + 0.5 | 0;\r\n        dstPixels[i + 1] = (value = r * 0.349 + g * 0.686 + b * 0.168) > 255 ? 255 : value < 0 ? 0 : value + 0.5 | 0;\r\n        dstPixels[i + 2] = (value = r * 0.272 + g * 0.534 + b * 0.131) > 255 ? 255 : value < 0 ? 0 : value + 0.5 | 0;\r\n        dstPixels[i + 3] = srcPixels[i + 3];\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * @param factor 1 <= n\r\n */\r\nImageFilters.Sharpen = function (srcImageData, factor) {\r\n    //Convolution formula from VIGRA\r\n    return this.ConvolutionFilter(srcImageData, 3, 3, [\r\n        -factor/16,     -factor/8,      -factor/16,\r\n        -factor/8,       factor*0.75+1, -factor/8,\r\n        -factor/16,     -factor/8,      -factor/16\r\n    ]);\r\n};\r\n\r\nImageFilters.Solarize = function (srcImageData) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    this.utils.mapRGB(srcPixels, dstPixels, function (value) {\r\n        return value > 127 ? (value - 127.5) * 2 : (127.5 - value) * 2;\r\n    });\r\n\r\n    return dstImageData;\r\n};\r\n\r\nImageFilters.Transpose = function (srcImageData) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcHeight, srcWidth),\r\n        dstPixels    = dstImageData.data;\r\n    \r\n    var srcIndex, dstIndex;\r\n    \r\n    for (y = 0; y < srcHeight; y += 1) {\r\n        for (x = 0; x < srcWidth; x += 1) {\r\n            srcIndex = (y * srcWidth + x) << 2;\r\n            dstIndex = (x * srcHeight + y) << 2;\r\n\r\n            dstPixels[dstIndex]     = srcPixels[srcIndex];\r\n            dstPixels[dstIndex + 1] = srcPixels[srcIndex + 1];\r\n            dstPixels[dstIndex + 2] = srcPixels[srcIndex + 2];\r\n            dstPixels[dstIndex + 3] = srcPixels[srcIndex + 3];\r\n        }\r\n    }\r\n    \r\n    return dstImageData;\r\n};\r\n\r\n/**\r\n * @param centerX 0.0 <= n <= 1.0\r\n * @param centerY 0.0 <= n <= 1.0\r\n * @param radius\r\n * @param angle(degree)\r\n * @param smooth\r\n */\r\nImageFilters.Twril = function (srcImageData, centerX, centerY, radius, angle, edge, smooth) {\r\n    var srcPixels    = srcImageData.data,\r\n        srcWidth     = srcImageData.width,\r\n        srcHeight    = srcImageData.height,\r\n        srcLength    = srcPixels.length,\r\n        dstImageData = this.utils.createImageData(srcWidth, srcHeight),\r\n        dstPixels    = dstImageData.data;\r\n\r\n    //convert position to px\r\n    centerX = srcWidth  * centerX;\r\n    centerY = srcHeight * centerY;\r\n\r\n    // degree to radian\r\n    angle *= (Math.PI / 180);\r\n\r\n    var radius2 = radius * radius,\r\n        max_y = srcHeight - 1,\r\n        max_x = srcWidth - 1,\r\n        dstIndex = 0,\r\n        x, y, dx, dy, distance, a, tx, ty, srcIndex, pixel, i;\r\n\r\n    for (y = 0; y < srcHeight; y += 1) {\r\n        for (x = 0; x < srcWidth; x += 1) {\r\n            dx = x - centerX;\r\n            dy = y - centerY;\r\n            distance = dx * dx + dy * dy;\r\n\r\n            if (distance > radius2) {\r\n                // out of the effected area. just copy the pixel\r\n                dstPixels[dstIndex]     = srcPixels[dstIndex];\r\n                dstPixels[dstIndex + 1] = srcPixels[dstIndex + 1];\r\n                dstPixels[dstIndex + 2] = srcPixels[dstIndex + 2];\r\n                dstPixels[dstIndex + 3] = srcPixels[dstIndex + 3];\r\n            }\r\n            else {\r\n                // main formula\r\n                distance = Math.sqrt(distance);\r\n                a  = Math.atan2(dy, dx) + (angle * (radius - distance)) / radius;\r\n                tx = centerX + distance * Math.cos(a);\r\n                ty = centerY + distance * Math.sin(a);\r\n\r\n                // copy target pixel\r\n                if (smooth) {\r\n                    // bilinear\r\n                    this.utils.copyBilinear(srcPixels, tx, ty, srcWidth, srcHeight, dstPixels, dstIndex, edge);\r\n                }\r\n                else {\r\n                    // nearest neighbor\r\n                    // round tx, ty\r\n                    // TODO edge actions!!\r\n                    srcIndex = ((ty + 0.5 | 0) * srcWidth + (tx + 0.5 | 0)) << 2;\r\n                    dstPixels[dstIndex]     = srcPixels[srcIndex];\r\n                    dstPixels[dstIndex + 1] = srcPixels[srcIndex + 1];\r\n                    dstPixels[dstIndex + 2] = srcPixels[srcIndex + 2];\r\n                    dstPixels[dstIndex + 3] = srcPixels[srcIndex + 3];\r\n                }\r\n            }\r\n            \r\n            dstIndex += 4;\r\n        }\r\n    }\r\n\r\n    return dstImageData;\r\n};\r\n\r\nexport default ImageFilters","const filterValue = [\r\n  {\r\n    name: 'HSLAdjustment',\r\n    chooseValue: ['h', 's', 'l'],\r\n    range: [{\r\n      min: -180,\r\n      max: 180,\r\n      first: 0\r\n    }, {\r\n      min: -100,\r\n      max: 100,\r\n      first: 0\r\n    }, {\r\n      min: -100,\r\n      max: 100,\r\n      first: 0\r\n    }]\r\n  }, {\r\n    name: 'GrayScale',\r\n    chooseValue: [],\r\n    range: []\r\n  }, {\r\n    name: 'Gamma',\r\n    chooseValue: ['g'],\r\n    range: [{\r\n      min: 0,\r\n      max: 3,\r\n      first: 1\r\n    }]\r\n  }, {\r\n    name: 'BrightnessContrastGimp',\r\n    chooseValue: ['b', 'c'],\r\n    range: [{\r\n      min: -100,\r\n      max: 100,\r\n      first: 30\r\n    }, {\r\n      min: -100,\r\n      max: 100,\r\n      first: 30\r\n    }]\r\n  }, {\r\n    name: 'Edge',\r\n    chooseValue: [],\r\n    range: []\r\n  }, {\r\n    name: 'Emboss',\r\n    chooseValue: [],\r\n    range: []\r\n  }, {\r\n    name: 'Invert',\r\n    chooseValue: [],\r\n    range: []\r\n  }, {\r\n    name: 'Oil',\r\n    chooseValue: ['r', 'l'],\r\n    range: [{\r\n      min: 1,\r\n      max: 5,\r\n      first: 2\r\n    }, {\r\n      min: 1,\r\n      max: 255,\r\n      first: 50\r\n    }]\r\n  }, {\r\n    name: 'Solarize',\r\n    chooseValue: [],\r\n    range: []\r\n  }, {\r\n    name: 'Twril',\r\n    chooseValue: ['cx', 'cy', 'r', 'angle', 'edge', 'smooth'],\r\n    range: [{\r\n      min: 0.5,\r\n      max: 0.5,\r\n      first: 0.5\r\n    }, {\r\n      min: 0.5,\r\n      max: 0.5,\r\n      first: 0.5\r\n    }, {\r\n      min: 10,\r\n      max: 200,\r\n      first: 100\r\n    }, {\r\n      min: -720,\r\n      max: 720,\r\n      first: 100\r\n    }, {\r\n      min: 0,\r\n      max: 0,\r\n      first: 'Clamp'\r\n    }, {\r\n      min: 1,\r\n      max: 1,\r\n      first: 1\r\n    }]\r\n  }\r\n]\r\n\r\nexport default {\r\n  filterValue: filterValue\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}